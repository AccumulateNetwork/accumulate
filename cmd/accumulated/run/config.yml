Config:
  non-binary: true
  fields:
    - name: file
      type: string
      marshal-as: none
    - name: fs
      type: fs.FS
      marshal-as: none
    - name: DotEnv
      type: bool
      pointer: true
    - name: Network
      type: string
    - name: Logging
      type: Logging
      marshal-as: reference
      pointer: true
    - name: Instrumentation
      type: Instrumentation
      marshal-as: reference
      pointer: true
    - name: P2P
      type: P2P
      marshal-as: reference
      pointer: true
    - name: Configurations
      type: Configuration
      marshal-as: union
      repeatable: true
    - name: Services
      type: Service
      marshal-as: union
      repeatable: true

Logging:
  non-binary: true
  fields:
    - name: Format
      type: string
    - name: Color
      type: bool
      pointer: true
    - name: Rules
      type: LoggingRule
      marshal-as: reference
      pointer: true
      repeatable: true
    - name: Loki
      type: LokiLogging
      marshal-as: reference
      pointer: true

LoggingRule:
  non-binary: true
  fields:
    - name: Level
      type: slog.Level
      marshal-as: value
      zero-value: '0'
      keep-empty: true
    - name: Modules
      type: string
      repeatable: true

LokiLogging:
  non-binary: true
  fields:
    - name: Enable
      type: bool
    - name: Url
      type: string
    - name: Username
      type: string
    - name: Password
      type: string

Instrumentation:
  non-binary: true
  fields:
    - type: HttpListener
      marshal-as: reference
    - name: Monitoring
      type: Monitor
      marshal-as: reference
      pointer: true

Monitor:
  non-binary: true
  fields:
    - name: Directory
      description: is the directory traces and profiles are written to
      type: string
    - name: ProfileMemory
      description: enables profiling when memory usage increases dramatically
      type: bool
      pointer: true
    - name: MemoryPollingRate
      description: is rate at which to poll memory usage
      type: duration
      pointer: true
    - name: AllocRateTrigger
      description: is the rate of allocation in bytes/second that triggers a profile
      type: float
      pointer: true

HttpListener:
  non-binary: true
  fields:
    - name: Listen
      description: are the addresses and schemes to listen on
      type: p2p.Multiaddr
      marshal-as: union
      repeatable: true
    - name: ConnectionLimit
      description: limits the number of concurrent connections
      type: int
      optional: true
      pointer: true
    - name: ReadHeaderTimeout
      description: protects against slow-loris attacks
      type: duration
      optional: true
      pointer: true
    - name: TlsCertPath
      description: is the path of the TLS certificate
      type: string
      optional: true
    - name: TlsKeyPath
      description: is the path of the TLS key
      type: string
      optional: true

P2P:
  non-binary: true
  fields:
    - name: Listen
      type: p2p.Multiaddr
      marshal-as: union
      repeatable: true
    - name: BootstrapPeers
      type: p2p.Multiaddr
      marshal-as: union
      repeatable: true
    - name: Key
      type: PrivateKey
      marshal-as: union
    - name: PeerDB
      type: string
      pointer: true
    - name: EnablePeerTracking
      type: bool
    - name: DiscoveryMode
      type: DhtMode
      marshal-as: value
      pointer: true
    - name: External
      type: p2p.Multiaddr
      marshal-as: union

RawPrivateKey:
  union: { type: privateKey }
  non-binary: true
  fields:
    - name: Address
      type: string

TransientPrivateKey:
  union: { type: privateKey }
  non-binary: true
  fields:
    - name: key
      type: address.Address
      marshal-as: none

PrivateKeySeed:
  union: { type: privateKey, value: seed }
  non-binary: true
  fields:
    - name: key
      type: address.Address
      marshal-as: none
    - name: Seed
      type: record.Key
      marshal-as: reference
      pointer: true

CometPrivValFile:
  union: { type: privateKey }
  non-binary: true
  fields:
    - name: key
      type: address.Address
      marshal-as: none
    - name: Path
      type: string

CometNodeKeyFile:
  union: { type: privateKey }
  non-binary: true
  fields:
    - name: key
      type: address.Address
      marshal-as: none
    - name: Path
      type: string

StorageService:
  union: { type: service }
  non-binary: true
  fields:
    - name: Name
      type: string
      optional: true
    - name: Storage
      type: Storage
      marshal-as: union

MemoryStorage:
  union: { type: storage }
  non-binary: true
  fields: ~

BadgerStorage:
  union: { type: storage }
  non-binary: true
  fields:
    - name: Path
      type: string
    - name: Version
      type: int

BoltStorage:
  union: { type: storage }
  non-binary: true
  fields:
    - name: Path
      type: string

LevelDBStorage:
  union: { type: storage }
  non-binary: true
  fields:
    - name: Path
      type: string

ExpBlockDBStorage:
  union: { type: storage }
  non-binary: true
  fields:
    - name: Path
      type: string

HttpService:
  union: { type: service }
  non-binary: true
  fields:
    - type: HttpListener
      marshal-as: reference
    - name: CorsOrigins
      description: is a list of allowed CORS origins
      type: string
      repeatable: true
      optional: true
    - name: LetsEncrypt
      description: automatically retrieves a certificate from Let's Encrypt for the specified domains
      type: string
      repeatable: true
      optional: true
    - name: DebugJsonRpc
      type: bool
      optional: true
      pointer: true
    - name: Router
      type: { name: ServiceOrRef, parameters: [{ type: RouterService, pointer: true }] }
      marshal-as: reference
      pointer: true
    - name: PeerMap
      description: hard-codes the peer map
      type: HttpPeerMapEntry
      marshal-as: reference
      pointer: true
      repeatable: true

HttpPeerMapEntry:
  fields:
    - name: ID
      type: p2p.PeerID
      marshal-as: union
      zero-value: '""'
    - name: Partitions
      type: string
      repeatable: true
    - name: Addresses
      type: p2p.Multiaddr
      marshal-as: union
      repeatable: true

RouterService:
  union: { type: service }
  fields:
    - name: Name
      type: string
      optional: true
    - name: Events
      description: may specify an event bus to use for routing table updates
      type: string
      optional: true
    - name: PeerMap
      description: uses a hard-coded peer map for initializing routing
      type: HttpPeerMapEntry
      marshal-as: reference
      pointer: true
      repeatable: true

FaucetService:
  union: { type: service }
  non-binary: true
  fields:
    - name: Account
      type: url
      pointer: true
    - name: SigningKey
      type: PrivateKey
      marshal-as: union
    - name: Router
      type: { name: ServiceOrRef, parameters: [{ type: RouterService, pointer: true }] }
      marshal-as: reference
      pointer: true

GatewayConfiguration:
  union: { type: configuration }
  non-binary: true
  fields:
    - name: Listen
      type: p2p.Multiaddr
      marshal-as: union

Querier:
  union: { type: service }
  non-binary: true
  fields:
    - name: Partition
      type: string
    - name: Storage
      type: StorageOrRef
      marshal-as: reference
      pointer: true
      optional: true

NetworkService:
  union: { type: service }
  non-binary: true
  fields:
    - name: Partition
      type: string

MetricsService:
  union: { type: service }
  non-binary: true
  fields:
    - name: Partition
      type: string

EventsService:
  union: { type: service }
  non-binary: true
  fields:
    - name: Partition
      type: string

SnapshotService:
  union: { type: service }
  non-binary: true
  fields:
    - name: Partition
      type: string
    - name: Storage
      type: StorageOrRef
      marshal-as: reference
      pointer: true
      optional: true

    - name: Directory
      description: is the directory to store snapshots in
      type: string
    - name: Schedule
      description: is the schedule for capturing snapshots
      type: network.CronSchedule
      marshal-as: reference
      pointer: true
      optional: true
    - name: RetainCount
      description:  is the number of snapshots to retain
      type: uint
      optional: true
      pointer: true
    - name: EnableIndexing
      description: enables indexing of snapshots
      type: bool
      optional: true
      pointer: true

CoreValidatorConfiguration:
  union: { type: configuration }
  non-binary: true
  fields:
    - name: Mode
      type: CoreValidatorMode
      marshal-as: enum
    - name: Listen
      type: p2p.Multiaddr
      marshal-as: union
    - name: BVN
      type: string
    - name: ValidatorKey
      type: PrivateKey
      marshal-as: union
    - name: DnGenesis
      type: string
    - name: BvnGenesis
      type: string
    - name: DnBootstrapPeers
      type: p2p.Multiaddr
      marshal-as: union
      repeatable: true
    - name: BvnBootstrapPeers
      type: p2p.Multiaddr
      marshal-as: union
      repeatable: true
    - name: EnableHealing
      type: bool
      pointer: true
      optional: true
    - name: EnableDirectDispatch
      type: bool
      optional: true
      pointer: true
    - name: EnableSnapshots
      type: bool
      optional: true
      pointer: true
    - name: MaxEnvelopesPerBlock
      type: uint
      optional: true
      pointer: true
    - name: StorageType
      type: StorageType
      marshal-as: enum
      pointer: true
      optional: true

ConsensusService:
  union: { type: service }
  non-binary: true
  fields:
    - name: NodeDir
      type: string
    - name: ValidatorKey
      type: PrivateKey
      marshal-as: union
    - name: Genesis
      type: string
    - name: Listen
      type: p2p.Multiaddr
      marshal-as: union
    - name: BootstrapPeers
      type: p2p.Multiaddr
      marshal-as: union
      repeatable: true
    - name: MetricsNamespace
      type: string
      optional: true
    - name: App
      type: ConsensusApp
      marshal-as: union

CoreConsensusApp:
  union: { type: consensusApp }
  non-binary: true
  fields:
    - name: Partition
      type: protocol.PartitionInfo
      marshal-as: reference
      pointer: true
    - name: EnableHealing
      type: bool
      optional: true
      pointer: true
    - name: EnableDirectDispatch
      type: bool
      optional: true
      pointer: true
    - name: MaxEnvelopesPerBlock
      type: uint
      optional: true
      pointer: true

DevnetConfiguration:
  union: { type: configuration }
  non-binary: true
  fields:
    - name: Listen
      type: p2p.Multiaddr
      marshal-as: union
    - name: Bvns
      type: uint
    - name: Validators
      type: uint
    - name: Followers
      type: uint
      optional: true
    - name: Globals
      type: network.GlobalValues
      marshal-as: reference
      pointer: true
    - name: StorageType
      type: StorageType
      marshal-as: enum
      pointer: true
      optional: true

SubnodeService:
  union: { type: service }
  non-binary: true
  fields:
    - name: Name
      type: string
    - name: NodeKey
      type: PrivateKey
      marshal-as: union
    - name: Services
      type: Service
      marshal-as: union
      repeatable: true
