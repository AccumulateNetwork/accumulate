// Code generated by mockery v2.23.1. DO NOT EDIT.

package dial

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// MockDiscoverer is an autogenerated mock type for the Discoverer type
type MockDiscoverer struct {
	mock.Mock
}

type MockDiscoverer_Expecter struct {
	mock *mock.Mock
}

func (_m *MockDiscoverer) EXPECT() *MockDiscoverer_Expecter {
	return &MockDiscoverer_Expecter{mock: &_m.Mock}
}

// Discover provides a mock function with given fields: _a0, _a1
func (_m *MockDiscoverer) Discover(_a0 context.Context, _a1 *DiscoveryRequest) (DiscoveryResponse, error) {
	ret := _m.Called(_a0, _a1)

	var r0 DiscoveryResponse
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *DiscoveryRequest) (DiscoveryResponse, error)); ok {
		return rf(_a0, _a1)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *DiscoveryRequest) DiscoveryResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(DiscoveryResponse)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *DiscoveryRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// MockDiscoverer_Discover_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Discover'
type MockDiscoverer_Discover_Call struct {
	*mock.Call
}

// Discover is a helper method to define mock.On call
//   - _a0 context.Context
//   - _a1 *DiscoveryRequest
func (_e *MockDiscoverer_Expecter) Discover(_a0 interface{}, _a1 interface{}) *MockDiscoverer_Discover_Call {
	return &MockDiscoverer_Discover_Call{Call: _e.mock.On("Discover", _a0, _a1)}
}

func (_c *MockDiscoverer_Discover_Call) Run(run func(_a0 context.Context, _a1 *DiscoveryRequest)) *MockDiscoverer_Discover_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(*DiscoveryRequest))
	})
	return _c
}

func (_c *MockDiscoverer_Discover_Call) Return(_a0 DiscoveryResponse, _a1 error) *MockDiscoverer_Discover_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockDiscoverer_Discover_Call) RunAndReturn(run func(context.Context, *DiscoveryRequest) (DiscoveryResponse, error)) *MockDiscoverer_Discover_Call {
	_c.Call.Return(run)
	return _c
}

type mockConstructorTestingTNewMockDiscoverer interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockDiscoverer creates a new instance of MockDiscoverer. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockDiscoverer(t mockConstructorTestingTNewMockDiscoverer) *MockDiscoverer {
	mock := &MockDiscoverer{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
