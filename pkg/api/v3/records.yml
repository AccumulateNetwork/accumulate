RecordRange[T Record]:
  union: { type: record, value: Range }
  fields:
    - name: Records
      type: T
      marshal-as: union
      repeatable: true
    - name: Start
      type: uint
      keep-empty: true
    - name: Total
      type: uint
      keep-empty: true
    - name: LastBlockTime
      type: time
      pointer: true

AccountRecord:
  union: { type: record }
  fields:
    - name: Account
      type: protocol.Account
      marshal-as: union
    - name: Directory
      type: { name: RecordRange, parameters: [{ type: UrlRecord, pointer: true }] }
      marshal-as: reference
      pointer: true
    - name: Pending
      type: { name: RecordRange, parameters: [{ type: TxIDRecord, pointer: true }] }
      marshal-as: reference
      pointer: true
    - name: Receipt
      type: Receipt
      marshal-as: reference
      pointer: true
    - name: LastBlockTime
      type: time
      pointer: true

ChainRecord:
  union: { type: record }
  fields:
    - name: Name
      type: string
    - name: Type
      type: merkle.ChainType
      marshal-as: enum
    - name: Count
      type: uint
    - name: State
      type: bytes
      repeatable: true
    - name: LastBlockTime
      type: time
      pointer: true

ChainEntryRecord[T Record]:
  union: { type: record }
  fields:
    - name: Account
      description: is the account (omitted if unambiguous)
      type: url
      pointer: true
    - name: Name
      type: string
    - name: Type
      type: merkle.ChainType
      marshal-as: enum
    - name: Index
      type: uint
      keep-empty: true
    - name: Entry
      type: hash
    - name: Value
      type: T
      marshal-as: union
    - name: Receipt
      type: Receipt
      marshal-as: reference
      pointer: true
    - name: State
      type: bytes
      repeatable: true
    - name: LastBlockTime
      type: time
      pointer: true

KeyRecord:
  union: { type: record }
  fields:
    - name: Authority
      type: url
      pointer: true
    - name: Signer
      type: url
      pointer: true
    - name: Version
      type: uint
    - name: Index
      type: uint
    - name: Entry
      type: protocol.KeySpec
      marshal-as: reference
      pointer: true

MessageRecord[T messaging.Message]:
  union: { type: record }
  fields:
    - name: ID
      type: txid
      pointer: true
    - name: Message
      type: T
      marshal-as: union
    - name: Status
      type: errors2.Status
      marshal-as: enum
    - { name: StatusNo, type: uint, virtual: true, non-binary: true }
    - name: Error
      type: errors2.Error
      marshal-as: reference
      pointer: true
    - name: Result
      type: protocol.TransactionResult
      marshal-as: union
    - name: Received
      description: is the block when the transaction was first received
      type: uint
    - name: Produced
      type: { name: RecordRange, parameters: [{ type: TxIDRecord, pointer: true }] }
      marshal-as: reference
      pointer: true
    - name: Cause
      type: { name: RecordRange, parameters: [{ type: TxIDRecord, pointer: true }] }
      marshal-as: reference
      pointer: true

    # For transactions
    - name: Signatures
      type: { name: RecordRange, parameters: [{ type: SignatureSetRecord, pointer: true }] }
      marshal-as: reference
      pointer: true

    # For a signature's record within a transaction's record
    - name: Historical
      type: bool

    # For sequenced messages
    - name: Sequence
      type: messaging.SequencedMessage
      marshal-as: reference
      pointer: true
      optional: true

    # For synthetic messages
    - name: SourceReceipt
      type: merkle.Receipt
      marshal-as: reference
      pointer: true

    - name: LastBlockTime
      type: time
      pointer: true

SignatureSetRecord:
  union: { type: record }
  fields:
    - name: Account
      type: protocol.Account
      marshal-as: union
    - name: Signatures
      type:
        name: RecordRange
        parameters:
        - type:
            name: MessageRecord
            parameters:
            - type: messaging.Message
          pointer: true
      marshal-as: reference
      pointer: true

MinorBlockRecord:
  union: { type: record }
  fields:
    - name: Index
      type: uint
    - name: Time
      type: time
      pointer: true
    - name: Source
      type: url
      pointer: true
    - name: Entries
      type:
        name: RecordRange
        parameters:
        - type:
            name: ChainEntryRecord
            parameters:
            - type: Record
          pointer: true
      marshal-as: reference
      pointer: true
    - name: Anchored
      type: { name: RecordRange, parameters: [{ type: MinorBlockRecord, pointer: true }] }
      marshal-as: reference
      pointer: true
    - name: LastBlockTime
      type: time
      pointer: true

MajorBlockRecord:
  union: { type: record }
  fields:
    - name: Index
      type: uint
    - name: Time
      type: time
    - name: MinorBlocks
      type: { name: RecordRange, parameters: [{ type: MinorBlockRecord, pointer: true }] }
      marshal-as: reference
      pointer: true
    - name: LastBlockTime
      type: time
      pointer: true

UrlRecord:
  union: { type: record }
  fields:
    - name: Value
      type: url
      pointer: true

TxIDRecord:
  union: { type: record }
  fields:
    - name: Value
      type: txid
      pointer: true

IndexEntryRecord:
  union: { type: record }
  fields:
    - name: Value
      type: protocol.IndexEntry
      marshal-as: reference
      pointer: true

ErrorRecord:
  union: { type: record }
  fields:
    - name: Value
      type: errors2.Error
      pointer: true
      marshal-as: reference
