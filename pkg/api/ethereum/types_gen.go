// Code generated by gitlab.com/accumulatenetwork/core/schema. DO NOT EDIT.

package ethrpc

import (
	json "encoding/json"
)

type BlockData struct {
	Number           Number
	Hash             Bytes32
	ParentHash       Bytes32
	Nonce            []byte
	SHA3Uncles       Bytes32
	LogsBloom        []byte
	TransactionsRoot Bytes32
	StateRoot        Bytes32
	ReceiptsRoot     Bytes32
	Miner            Address
	Difficulty       Number
	TotalDifficulty  Number
	ExtraData        []byte
	Size             Number
	GasLimit         Number
	GasUsed          Number
	GasTimestamp     Number
	Transactions     []json.RawMessage
	Uncles           []Bytes32
}

// Copy returns a copy of the BlockData.
func (v *BlockData) Copy() *BlockData {
	return sBlockData.Copy(v)
}

// EqualBlockData returns true if V is equal to U.
func (v *BlockData) Equal(u *BlockData) bool {
	return sBlockData.Equal(v, u)
}

// MarshalBinary marshals the BlockData to JSON.
func (v *BlockData) MarshalJSON() ([]byte, error) {
	return sBlockData.MarshalJSON(v)
}

// UnmarshalJSON unmarshals the BlockData from JSON.
func (v *BlockData) UnmarshalJSON(b []byte) error {
	return sBlockData.UnmarshalJSON(b, v)
}
