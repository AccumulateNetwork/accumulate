// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.13.0
// source: api.proto

package proto

import (
	reflect "reflect"
	sync "sync"

	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type AccInstruction int32

const (
	AccInstruction_Unknown                AccInstruction = 0
	AccInstruction_Identity_Creation      AccInstruction = 1
	AccInstruction_Token_URL_Creation     AccInstruction = 2
	AccInstruction_Token_Transaction      AccInstruction = 3
	AccInstruction_Data_Chain_Creation    AccInstruction = 4
	AccInstruction_Data_Entry             AccInstruction = 5 //per 256 btes
	AccInstruction_Scratch_Chain_Creation AccInstruction = 6
	AccInstruction_Scratch_Entry          AccInstruction = 7 //per 256 bytes
	AccInstruction_Token_Issue            AccInstruction = 8
	AccInstruction_Key_Update             AccInstruction = 9  //update keys on the keychain the identity
	AccInstruction_Deep_Query             AccInstruction = 10 //implements a transaction on the network that is processed by validators these cost $$, but can provide cryptographic proof for validity at current state
	AccInstruction_State_Query            AccInstruction = 11 //sends a query to a chain and returns its state information
	//Only valid for BVC use: any other source of this message will be rejected
	//is this data store or State_Store
	AccInstruction_Data_Store                     AccInstruction = 12 //Data Store can only be sent and thus authorized by an authority node
	AccInstruction_State_Store                    AccInstruction = 13
	AccInstruction_Admin_Vote                     AccInstruction = 14
	AccInstruction_Multisig_Transaction           AccInstruction = 15
	AccInstruction_Synthetic_Identity_Creation    AccInstruction = 17
	AccInstruction_Synthetic_Token_Transaction    AccInstruction = 19
	AccInstruction_Synthetic_Token_Deposit        AccInstruction = 20
	AccInstruction_Synthetic_Transaction_Response AccInstruction = 21
)

// Enum value maps for AccInstruction.
var (
	AccInstruction_name = map[int32]string{
		0:  "Unknown",
		1:  "Identity_Creation",
		2:  "Token_URL_Creation",
		3:  "Token_Transaction",
		4:  "Data_Chain_Creation",
		5:  "Data_Entry",
		6:  "Scratch_Chain_Creation",
		7:  "Scratch_Entry",
		8:  "Token_Issue",
		9:  "Key_Update",
		10: "Deep_Query",
		11: "State_Query",
		12: "Data_Store",
		13: "State_Store",
		14: "Admin_Vote",
		17: "Synthetic_Identity_Creation",
		19: "Synthetic_Token_Transaction",
		20: "Synthetic_Token_Deposit",
		21: "Synthetic_Transaction_Response",
	}
	AccInstruction_value = map[string]int32{
		"Unknown":                        0,
		"Identity_Creation":              1,
		"Token_URL_Creation":             2,
		"Token_Transaction":              3,
		"Data_Chain_Creation":            4,
		"Data_Entry":                     5,
		"Scratch_Chain_Creation":         6,
		"Scratch_Entry":                  7,
		"Token_Issue":                    8,
		"Key_Update":                     9,
		"Deep_Query":                     10,
		"State_Query":                    11,
		"Data_Store":                     12,
		"State_Store":                    13,
		"Admin_Vote":                     14,
		"Synthetic_Identity_Creation":    17,
		"Synthetic_Token_Transaction":    19,
		"Synthetic_Token_Deposit":        20,
		"Synthetic_Transaction_Response": 21,
	}
)

func (x AccInstruction) Enum() *AccInstruction {
	p := new(AccInstruction)
	*p = x
	return p
}

func (x AccInstruction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AccInstruction) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_enumTypes[0].Descriptor()
}

func (AccInstruction) Type() protoreflect.EnumType {
	return &file_api_proto_enumTypes[0]
}

func (x AccInstruction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AccInstruction.Descriptor instead.
func (AccInstruction) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{0}
}

type DBVCInstructionHeaderInsType int32

const (
	DBVCInstructionHeader_Unknown             DBVCInstructionHeaderInsType = 0
	DBVCInstructionHeader_EntrySubmit         DBVCInstructionHeaderInsType = 1 // submission instruction issued at each end of block of VBC.
	DBVCInstructionHeader_EntryReveal         DBVCInstructionHeaderInsType = 2
	DBVCInstructionHeader_AddChain            DBVCInstructionHeaderInsType = 3
	DBVCInstructionHeader_RemoveChain         DBVCInstructionHeaderInsType = 4
	DBVCInstructionHeader_RegisterMasterChain DBVCInstructionHeaderInsType = 5 // add a new master chain
	DBVCInstructionHeader_RemoveMasterChain   DBVCInstructionHeaderInsType = 6 // remove a master chain the network.  May need to have blacklists so that core chain's cannot be removed without a fork?
	DBVCInstructionHeader_RegisterADI         DBVCInstructionHeaderInsType = 7
)

// Enum value maps for DBVCInstructionHeaderInsType.
var (
	DBVCInstructionHeaderInsType_name = map[int32]string{
		0: "Unknown",
		1: "EntrySubmit",
		2: "EntryReveal",
		3: "AddChain",
		4: "RemoveChain",
		5: "RegisterMasterChain",
		6: "RemoveMasterChain",
		7: "RegisterADI",
	}
	DBVCInstructionHeaderInsType_value = map[string]int32{
		"Unknown":             0,
		"EntrySubmit":         1,
		"EntryReveal":         2,
		"AddChain":            3,
		"RemoveChain":         4,
		"RegisterMasterChain": 5,
		"RemoveMasterChain":   6,
		"RegisterADI":         7,
	}
)

func (x DBVCInstructionHeaderInsType) Enum() *DBVCInstructionHeaderInsType {
	p := new(DBVCInstructionHeaderInsType)
	*p = x
	return p
}

func (x DBVCInstructionHeaderInsType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DBVCInstructionHeaderInsType) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_enumTypes[1].Descriptor()
}

func (DBVCInstructionHeaderInsType) Type() protoreflect.EnumType {
	return &file_api_proto_enumTypes[1]
}

func (x DBVCInstructionHeaderInsType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DBVCInstructionHeaderInsType.Descriptor instead.
func (DBVCInstructionHeaderInsType) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{1, 0}
}

type EntryMsgType int32

const (
	Entry_WriteEntryBytes    EntryMsgType = 0
	Entry_WriteKeyValue      EntryMsgType = 1
	Entry_ReadKeyValue       EntryMsgType = 2
	Entry_AccountWrite       EntryMsgType = 100
	Entry_AccountRead        EntryMsgType = 101
	Entry_GasAllowanceUpdate EntryMsgType = 105
)

// Enum value maps for EntryMsgType.
var (
	EntryMsgType_name = map[int32]string{
		0:   "WriteEntryBytes",
		1:   "WriteKeyValue",
		2:   "ReadKeyValue",
		100: "AccountWrite",
		101: "AccountRead",
		105: "GasAllowanceUpdate",
	}
	EntryMsgType_value = map[string]int32{
		"WriteEntryBytes":    0,
		"WriteKeyValue":      1,
		"ReadKeyValue":       2,
		"AccountWrite":       100,
		"AccountRead":        101,
		"GasAllowanceUpdate": 105,
	}
)

func (x EntryMsgType) Enum() *EntryMsgType {
	p := new(EntryMsgType)
	*p = x
	return p
}

func (x EntryMsgType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EntryMsgType) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_enumTypes[2].Descriptor()
}

func (EntryMsgType) Type() protoreflect.EnumType {
	return &file_api_proto_enumTypes[2]
}

func (x EntryMsgType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EntryMsgType.Descriptor instead.
func (EntryMsgType) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{12, 0}
}

type ShardCountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Numshards int32 `protobuf:"varint,1,opt,name=numshards,proto3" json:"numshards,omitempty"` //return the number of shards that are active
}

func (x *ShardCountResponse) Reset() {
	*x = ShardCountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShardCountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShardCountResponse) ProtoMessage() {}

func (x *ShardCountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShardCountResponse.ProtoReflect.Descriptor instead.
func (*ShardCountResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{0}
}

func (x *ShardCountResponse) GetNumshards() int32 {
	if x != nil {
		return x.Numshards
	}
	return 0
}

//Directory Block Validation Chain (DBVC) Instruction Header
//maybe rethink into instruction and subcommand.  for example entry has several froms as does chain, adi etc.
//the chain address routes the thing anyway so maybe instruction really needs to be address
type DBVCInstructionHeader struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Instruction        DBVCInstructionHeaderInsType `protobuf:"varint,1,opt,name=instruction,proto3,enum=apiProto.DBVCInstructionHeaderInsType" json:"instruction,omitempty"` // type of instruction / request, will have one of the values of
	Version            uint32                       `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`                                                    // version number stored as varint.
	BvcMasterChainDDII []byte                       `protobuf:"bytes,3,opt,name=bvcMasterChainDDII,proto3" json:"bvcMasterChainDDII,omitempty"`                               // block validation chain (BVC) DDII from which BVC master chain did this request originate. Identifies BVC and Network
	BvcValidatorDDII   []byte                       `protobuf:"bytes,4,opt,name=bvcValidatorDDII,proto3" json:"bvcValidatorDDII,omitempty"`                                   // Specific Digital identity of validator within the BVC submitting the instruction
}

func (x *DBVCInstructionHeader) Reset() {
	*x = DBVCInstructionHeader{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DBVCInstructionHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DBVCInstructionHeader) ProtoMessage() {}

func (x *DBVCInstructionHeader) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DBVCInstructionHeader.ProtoReflect.Descriptor instead.
func (*DBVCInstructionHeader) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{1}
}

func (x *DBVCInstructionHeader) GetInstruction() DBVCInstructionHeaderInsType {
	if x != nil {
		return x.Instruction
	}
	return DBVCInstructionHeader_Unknown
}

func (x *DBVCInstructionHeader) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *DBVCInstructionHeader) GetBvcMasterChainDDII() []byte {
	if x != nil {
		return x.BvcMasterChainDDII
	}
	return nil
}

func (x *DBVCInstructionHeader) GetBvcValidatorDDII() []byte {
	if x != nil {
		return x.BvcValidatorDDII
	}
	return nil
}

type BVCEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header *DBVCInstructionHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Entry  []byte                 `protobuf:"bytes,2,opt,name=entry,proto3" json:"entry,omitempty"` // BVC Entry - Merkel DAG root tx (41 bytes) consists of
	//  header := [ version (1byte) | varintf ddiilen | ddii (up to 32 bytes) ]
	//  body :=   [  bvc bigendian blockheight (4 bytes) |
	//               unix timestamp (4 bytes) |
	//               Merkel DAG Root hash (32 Bytes)]
	Signature []byte `protobuf:"bytes,3,opt,name=signature,proto3" json:"signature,omitempty"` // Signature: ed25519[ entry ]
}

func (x *BVCEntry) Reset() {
	*x = BVCEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BVCEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BVCEntry) ProtoMessage() {}

func (x *BVCEntry) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BVCEntry.ProtoReflect.Descriptor instead.
func (*BVCEntry) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{2}
}

func (x *BVCEntry) GetHeader() *DBVCInstructionHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *BVCEntry) GetEntry() []byte {
	if x != nil {
		return x.Entry
	}
	return nil
}

func (x *BVCEntry) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

type Fee struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TimeStamp    int64  `protobuf:"varint,1,opt,name=TimeStamp,proto3" json:"TimeStamp,omitempty"`       // 8
	DDII         []byte `protobuf:"bytes,2,opt,name=DDII,proto3" json:"DDII,omitempty"`                  // Hash 32
	ChainID      []byte `protobuf:"bytes,3,opt,name=ChainID,proto3" json:"ChainID,omitempty"`            //[33]byte     // 33
	Credits      int32  `protobuf:"varint,4,opt,name=Credits,proto3" json:"Credits,omitempty"`           //int8         // 1
	SignatureIdx int32  `protobuf:"varint,5,opt,name=SignatureIdx,proto3" json:"SignatureIdx,omitempty"` //int8
	Signature    []byte `protobuf:"bytes,6,opt,name=Signature,proto3" json:"Signature,omitempty"`        //minimum 64 bytes []byte       // 64 minimum
	// 1 end byte ( 140 bytes for FEE)
	Transaction []byte `protobuf:"bytes,7,opt,name=Transaction,proto3" json:"Transaction,omitempty"` //[]byte       // Transaction
}

func (x *Fee) Reset() {
	*x = Fee{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Fee) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Fee) ProtoMessage() {}

func (x *Fee) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Fee.ProtoReflect.Descriptor instead.
func (*Fee) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{3}
}

func (x *Fee) GetTimeStamp() int64 {
	if x != nil {
		return x.TimeStamp
	}
	return 0
}

func (x *Fee) GetDDII() []byte {
	if x != nil {
		return x.DDII
	}
	return nil
}

func (x *Fee) GetChainID() []byte {
	if x != nil {
		return x.ChainID
	}
	return nil
}

func (x *Fee) GetCredits() int32 {
	if x != nil {
		return x.Credits
	}
	return 0
}

func (x *Fee) GetSignatureIdx() int32 {
	if x != nil {
		return x.SignatureIdx
	}
	return 0
}

func (x *Fee) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *Fee) GetTransaction() []byte {
	if x != nil {
		return x.Transaction
	}
	return nil
}

type Submission struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AdiChainPath       string         `protobuf:"bytes,1,opt,name=AdiChainPath,proto3" json:"AdiChainPath,omitempty"`                             //provided for reference <= either send this or the chains, chains have advantage of not needing to hash.
	Identitychain      []byte         `protobuf:"bytes,2,opt,name=identitychain,proto3" json:"identitychain,omitempty"`                           // router will determine network this chain this resides on by looking at lower 64 bits (little Endian)
	Chainid            []byte         `protobuf:"bytes,3,opt,name=chainid,proto3" json:"chainid,omitempty"`                                       // chainid of the entry somewhere underneath identity chain
	Type               []byte         `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`                                             // chain type - hash of the chain spec e.g. AIM/1/0.1 (for Accumulate IMprovement, Adi specification, version 0.1).
	Instruction        AccInstruction `protobuf:"varint,5,opt,name=instruction,proto3,enum=apiProto.AccInstruction" json:"instruction,omitempty"` // validator specific,
	Param1             uint64         `protobuf:"varint,6,opt,name=param1,proto3" json:"param1,omitempty"`                                        // validator specific, deprecated
	Param2             uint64         `protobuf:"varint,7,opt,name=param2,proto3" json:"param2,omitempty"`                                        // validator specific, deprecated
	Data               []byte         `protobuf:"bytes,8,opt,name=data,proto3" json:"data,omitempty"`                                             // validator will validate this data however it sees fit. may include signature
	Timestamp          int64          `protobuf:"varint,9,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Key                []byte         `protobuf:"bytes,10,opt,name=key,proto3" json:"key,omitempty"`
	Signature          []byte         `protobuf:"bytes,11,opt,name=signature,proto3" json:"signature,omitempty"`
	SourceAdiChainPath string         `protobuf:"bytes,12,opt,name=sourceAdiChainPath,proto3" json:"sourceAdiChainPath,omitempty"` //who sent this ? only valid for synthetic transactions.
}

func (x *Submission) Reset() {
	*x = Submission{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Submission) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Submission) ProtoMessage() {}

func (x *Submission) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Submission.ProtoReflect.Descriptor instead.
func (*Submission) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{4}
}

func (x *Submission) GetAdiChainPath() string {
	if x != nil {
		return x.AdiChainPath
	}
	return ""
}

func (x *Submission) GetIdentitychain() []byte {
	if x != nil {
		return x.Identitychain
	}
	return nil
}

func (x *Submission) GetChainid() []byte {
	if x != nil {
		return x.Chainid
	}
	return nil
}

func (x *Submission) GetType() []byte {
	if x != nil {
		return x.Type
	}
	return nil
}

func (x *Submission) GetInstruction() AccInstruction {
	if x != nil {
		return x.Instruction
	}
	return AccInstruction_Unknown
}

func (x *Submission) GetParam1() uint64 {
	if x != nil {
		return x.Param1
	}
	return 0
}

func (x *Submission) GetParam2() uint64 {
	if x != nil {
		return x.Param2
	}
	return 0
}

func (x *Submission) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *Submission) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *Submission) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *Submission) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *Submission) GetSourceAdiChainPath() string {
	if x != nil {
		return x.SourceAdiChainPath
	}
	return ""
}

type SubmissionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Respdata  []byte `protobuf:"bytes,1,opt,name=respdata,proto3" json:"respdata,omitempty"`
	ErrorCode uint64 `protobuf:"varint,2,opt,name=errorCode,proto3" json:"errorCode,omitempty"`
}

func (x *SubmissionResponse) Reset() {
	*x = SubmissionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubmissionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmissionResponse) ProtoMessage() {}

func (x *SubmissionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmissionResponse.ProtoReflect.Descriptor instead.
func (*SubmissionResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{5}
}

func (x *SubmissionResponse) GetRespdata() []byte {
	if x != nil {
		return x.Respdata
	}
	return nil
}

func (x *SubmissionResponse) GetErrorCode() uint64 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

type Query struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChainUrl string         `protobuf:"bytes,1,opt,name=ChainUrl,proto3" json:"ChainUrl,omitempty"`
	AdiChain []byte         `protobuf:"bytes,2,opt,name=AdiChain,proto3" json:"AdiChain,omitempty"`
	ChainId  []byte         `protobuf:"bytes,3,opt,name=ChainId,proto3" json:"ChainId,omitempty"`
	Ins      AccInstruction `protobuf:"varint,4,opt,name=Ins,proto3,enum=apiProto.AccInstruction" json:"Ins,omitempty"` //this is the instruction for the type of query
	Query    []byte         `protobuf:"bytes,5,opt,name=Query,proto3" json:"Query,omitempty"`                           // This is the query data to be processed by the validator
}

func (x *Query) Reset() {
	*x = Query{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Query) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Query) ProtoMessage() {}

func (x *Query) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Query.ProtoReflect.Descriptor instead.
func (*Query) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{6}
}

func (x *Query) GetChainUrl() string {
	if x != nil {
		return x.ChainUrl
	}
	return ""
}

func (x *Query) GetAdiChain() []byte {
	if x != nil {
		return x.AdiChain
	}
	return nil
}

func (x *Query) GetChainId() []byte {
	if x != nil {
		return x.ChainId
	}
	return nil
}

func (x *Query) GetIns() AccInstruction {
	if x != nil {
		return x.Ins
	}
	return AccInstruction_Unknown
}

func (x *Query) GetQuery() []byte {
	if x != nil {
		return x.Query
	}
	return nil
}

type QueryResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code uint32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Data []byte `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *QueryResp) Reset() {
	*x = QueryResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryResp) ProtoMessage() {}

func (x *QueryResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryResp.ProtoReflect.Descriptor instead.
func (*QueryResp) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{7}
}

func (x *QueryResp) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *QueryResp) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type ValidatorSubmission struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Height       int64       `protobuf:"varint,1,opt,name=height,proto3" json:"height,omitempty"` //height at which submission was made
	Submission   *Submission `protobuf:"bytes,2,opt,name=submission,proto3" json:"submission,omitempty"`
	Submitteradi []byte      `protobuf:"bytes,3,opt,name=submitteradi,proto3" json:"submitteradi,omitempty"` //digital identity of signer
	Shardadi     []byte      `protobuf:"bytes,4,opt,name=shardadi,proto3" json:"shardadi,omitempty"`         //digital identity of shard
	Signature    []byte      `protobuf:"bytes,5,opt,name=signature,proto3" json:"signature,omitempty"`       //signature of the validator making the submission
}

func (x *ValidatorSubmission) Reset() {
	*x = ValidatorSubmission{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidatorSubmission) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidatorSubmission) ProtoMessage() {}

func (x *ValidatorSubmission) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidatorSubmission.ProtoReflect.Descriptor instead.
func (*ValidatorSubmission) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{8}
}

func (x *ValidatorSubmission) GetHeight() int64 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *ValidatorSubmission) GetSubmission() *Submission {
	if x != nil {
		return x.Submission
	}
	return nil
}

func (x *ValidatorSubmission) GetSubmitteradi() []byte {
	if x != nil {
		return x.Submitteradi
	}
	return nil
}

func (x *ValidatorSubmission) GetShardadi() []byte {
	if x != nil {
		return x.Shardadi
	}
	return nil
}

func (x *ValidatorSubmission) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

type BVCEntryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseData []byte `protobuf:"bytes,1,opt,name=responseData,proto3" json:"responseData,omitempty"` // error message???
	ErrorCode    uint64 `protobuf:"varint,2,opt,name=errorCode,proto3" json:"errorCode,omitempty"`      // error code if it fails the sanity check
}

func (x *BVCEntryResponse) Reset() {
	*x = BVCEntryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BVCEntryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BVCEntryResponse) ProtoMessage() {}

func (x *BVCEntryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BVCEntryResponse.ProtoReflect.Descriptor instead.
func (*BVCEntryResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{9}
}

func (x *BVCEntryResponse) GetResponseData() []byte {
	if x != nil {
		return x.ResponseData
	}
	return nil
}

func (x *BVCEntryResponse) GetErrorCode() uint64 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

type ValRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ValidatorAddr uint64 `protobuf:"varint,1,opt,name=validatorAddr,proto3" json:"validatorAddr,omitempty"` // block validation chain address - sha256(chainId)[0:7] - big-endian or little-endian?
	Instruction   uint32 `protobuf:"varint,2,opt,name=instruction,proto3" json:"instruction,omitempty"`     // instruction code used by the validator - e.g. "write data"
	Parameter1    uint32 `protobuf:"varint,3,opt,name=parameter1,proto3" json:"parameter1,omitempty"`       // parameter 1 specific to the instruction
	Parameter2    uint32 `protobuf:"varint,4,opt,name=parameter2,proto3" json:"parameter2,omitempty"`       // parameter 2 specific to the instruction
	Nonce         uint64 `protobuf:"varint,5,opt,name=nonce,proto3" json:"nonce,omitempty"`                 // typically time stamp or monotonic counter
	Data          []byte `protobuf:"bytes,6,opt,name=data,proto3" json:"data,omitempty"`                    // payload for validator - Command Data
	Signed        []byte `protobuf:"bytes,7,opt,name=signed,proto3" json:"signed,omitempty"`                // ed25519 signature
}

func (x *ValRequest) Reset() {
	*x = ValRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValRequest) ProtoMessage() {}

func (x *ValRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValRequest.ProtoReflect.Descriptor instead.
func (*ValRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{10}
}

func (x *ValRequest) GetValidatorAddr() uint64 {
	if x != nil {
		return x.ValidatorAddr
	}
	return 0
}

func (x *ValRequest) GetInstruction() uint32 {
	if x != nil {
		return x.Instruction
	}
	return 0
}

func (x *ValRequest) GetParameter1() uint32 {
	if x != nil {
		return x.Parameter1
	}
	return 0
}

func (x *ValRequest) GetParameter2() uint32 {
	if x != nil {
		return x.Parameter2
	}
	return 0
}

func (x *ValRequest) GetNonce() uint64 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *ValRequest) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ValRequest) GetSigned() []byte {
	if x != nil {
		return x.Signed
	}
	return nil
}

type ValReponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseData []byte `protobuf:"bytes,1,opt,name=responseData,proto3" json:"responseData,omitempty"`
	ErrorCode    uint64 `protobuf:"varint,2,opt,name=errorCode,proto3" json:"errorCode,omitempty"`
}

func (x *ValReponse) Reset() {
	*x = ValReponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValReponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValReponse) ProtoMessage() {}

func (x *ValReponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValReponse.ProtoReflect.Descriptor instead.
func (*ValReponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{11}
}

func (x *ValReponse) GetResponseData() []byte {
	if x != nil {
		return x.ResponseData
	}
	return nil
}

func (x *ValReponse) GetErrorCode() uint64 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

type Entry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key         []byte       `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	MessageType EntryMsgType `protobuf:"varint,2,opt,name=messageType,proto3,enum=apiProto.EntryMsgType" json:"messageType,omitempty"`
	Nonce       uint64       `protobuf:"varint,3,opt,name=nonce,proto3" json:"nonce,omitempty"` //(typically time stamp)
	Data        []byte       `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	Signed      []byte       `protobuf:"bytes,5,opt,name=signed,proto3" json:"signed,omitempty"`
}

func (x *Entry) Reset() {
	*x = Entry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Entry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Entry) ProtoMessage() {}

func (x *Entry) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Entry.ProtoReflect.Descriptor instead.
func (*Entry) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{12}
}

func (x *Entry) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *Entry) GetMessageType() EntryMsgType {
	if x != nil {
		return x.MessageType
	}
	return Entry_WriteEntryBytes
}

func (x *Entry) GetNonce() uint64 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *Entry) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *Entry) GetSigned() []byte {
	if x != nil {
		return x.Signed
	}
	return nil
}

type Height struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Height uint64 `protobuf:"varint,1,opt,name=height,proto3" json:"height,omitempty"`
}

func (x *Height) Reset() {
	*x = Height{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Height) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Height) ProtoMessage() {}

func (x *Height) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Height.ProtoReflect.Descriptor instead.
func (*Height) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{13}
}

func (x *Height) GetHeight() uint64 {
	if x != nil {
		return x.Height
	}
	return 0
}

type EntryBytes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []byte `protobuf:"bytes,1,opt,name=Data,proto3" json:"Data,omitempty"`
}

func (x *EntryBytes) Reset() {
	*x = EntryBytes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EntryBytes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntryBytes) ProtoMessage() {}

func (x *EntryBytes) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntryBytes.ProtoReflect.Descriptor instead.
func (*EntryBytes) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{14}
}

func (x *EntryBytes) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type Account struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name             string           `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Owner            string           `protobuf:"bytes,2,opt,name=owner,proto3" json:"owner,omitempty"`
	MessageAllowance int32            `protobuf:"varint,3,opt,name=messageAllowance,proto3" json:"messageAllowance,omitempty"`
	Groups           []*Account_Group `protobuf:"bytes,4,rep,name=groups,proto3" json:"groups,omitempty"`
	AllowAddAccounts bool             `protobuf:"varint,5,opt,name=allowAddAccounts,proto3" json:"allowAddAccounts,omitempty"`
	AllowAddGroups   bool             `protobuf:"varint,6,opt,name=allowAddGroups,proto3" json:"allowAddGroups,omitempty"`
}

func (x *Account) Reset() {
	*x = Account{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Account) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Account) ProtoMessage() {}

func (x *Account) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Account.ProtoReflect.Descriptor instead.
func (*Account) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{15}
}

func (x *Account) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Account) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *Account) GetMessageAllowance() int32 {
	if x != nil {
		return x.MessageAllowance
	}
	return 0
}

func (x *Account) GetGroups() []*Account_Group {
	if x != nil {
		return x.Groups
	}
	return nil
}

func (x *Account) GetAllowAddAccounts() bool {
	if x != nil {
		return x.AllowAddAccounts
	}
	return false
}

func (x *Account) GetAllowAddGroups() bool {
	if x != nil {
		return x.AllowAddGroups
	}
	return false
}

type Group struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *Group) Reset() {
	*x = Group{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Group) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Group) ProtoMessage() {}

func (x *Group) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Group.ProtoReflect.Descriptor instead.
func (*Group) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{16}
}

func (x *Group) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Group) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type AccountAdd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PublicKey []byte   `protobuf:"bytes,1,opt,name=publicKey,proto3" json:"publicKey,omitempty"`
	Account   *Account `protobuf:"bytes,2,opt,name=account,proto3" json:"account,omitempty"`
}

func (x *AccountAdd) Reset() {
	*x = AccountAdd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountAdd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountAdd) ProtoMessage() {}

func (x *AccountAdd) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountAdd.ProtoReflect.Descriptor instead.
func (*AccountAdd) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{17}
}

func (x *AccountAdd) GetPublicKey() []byte {
	if x != nil {
		return x.PublicKey
	}
	return nil
}

func (x *AccountAdd) GetAccount() *Account {
	if x != nil {
		return x.Account
	}
	return nil
}

type GasAllowanceUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountKey   []byte `protobuf:"bytes,1,opt,name=accountKey,proto3" json:"accountKey,omitempty"`
	GasAllowance int32  `protobuf:"varint,2,opt,name=gasAllowance,proto3" json:"gasAllowance,omitempty"`
}

func (x *GasAllowanceUpdate) Reset() {
	*x = GasAllowanceUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GasAllowanceUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GasAllowanceUpdate) ProtoMessage() {}

func (x *GasAllowanceUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GasAllowanceUpdate.ProtoReflect.Descriptor instead.
func (*GasAllowanceUpdate) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{18}
}

func (x *GasAllowanceUpdate) GetAccountKey() []byte {
	if x != nil {
		return x.AccountKey
	}
	return nil
}

func (x *GasAllowanceUpdate) GetGasAllowance() int32 {
	if x != nil {
		return x.GasAllowance
	}
	return 0
}

type Reply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hash   []byte `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	Height uint64 `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`
	Error  string `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *Reply) Reset() {
	*x = Reply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Reply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Reply) ProtoMessage() {}

func (x *Reply) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Reply.ProtoReflect.Descriptor instead.
func (*Reply) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{19}
}

func (x *Reply) GetHash() []byte {
	if x != nil {
		return x.Hash
	}
	return nil
}

func (x *Reply) GetHeight() uint64 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *Reply) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type KeyValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key    []byte `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value  []byte `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	Height uint64 `protobuf:"varint,3,opt,name=height,proto3" json:"height,omitempty"`
}

func (x *KeyValue) Reset() {
	*x = KeyValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeyValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyValue) ProtoMessage() {}

func (x *KeyValue) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyValue.ProtoReflect.Descriptor instead.
func (*KeyValue) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{20}
}

func (x *KeyValue) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *KeyValue) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *KeyValue) GetHeight() uint64 {
	if x != nil {
		return x.Height
	}
	return 0
}

type Key struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key []byte `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *Key) Reset() {
	*x = Key{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Key) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Key) ProtoMessage() {}

func (x *Key) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Key.ProtoReflect.Descriptor instead.
func (*Key) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{21}
}

func (x *Key) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

type NodeInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version string `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *NodeInfo) Reset() {
	*x = NodeInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeInfo) ProtoMessage() {}

func (x *NodeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeInfo.ProtoReflect.Descriptor instead.
func (*NodeInfo) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{22}
}

func (x *NodeInfo) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type Account_Group struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	AdminRights bool   `protobuf:"varint,2,opt,name=adminRights,proto3" json:"adminRights,omitempty"`
}

func (x *Account_Group) Reset() {
	*x = Account_Group{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Account_Group) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Account_Group) ProtoMessage() {}

func (x *Account_Group) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Account_Group.ProtoReflect.Descriptor instead.
func (*Account_Group) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{15, 0}
}

func (x *Account_Group) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Account_Group) GetAdminRights() bool {
	if x != nil {
		return x.AdminRights
	}
	return false
}

var File_api_proto protoreflect.FileDescriptor

var file_api_proto_rawDesc = []byte{
	0x0a, 0x09, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x61, 0x70, 0x69,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x32, 0x0a, 0x12, 0x53, 0x68, 0x61, 0x72, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x75, 0x6d, 0x73,
	0x68, 0x61, 0x72, 0x64, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6e, 0x75, 0x6d,
	0x73, 0x68, 0x61, 0x72, 0x64, 0x73, 0x22, 0xf3, 0x02, 0x0a, 0x15, 0x44, 0x42, 0x56, 0x43, 0x49,
	0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x12, 0x49, 0x0a, 0x0b, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x27, 0x2e, 0x61, 0x70, 0x69, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x44, 0x42, 0x56, 0x43, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x2e, 0x69, 0x6e, 0x73, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b,
	0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2e, 0x0a, 0x12, 0x62, 0x76, 0x63, 0x4d, 0x61, 0x73, 0x74,
	0x65, 0x72, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x44, 0x44, 0x49, 0x49, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x12, 0x62, 0x76, 0x63, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x43, 0x68, 0x61, 0x69,
	0x6e, 0x44, 0x44, 0x49, 0x49, 0x12, 0x2a, 0x0a, 0x10, 0x62, 0x76, 0x63, 0x56, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x6f, 0x72, 0x44, 0x44, 0x49, 0x49, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x10, 0x62, 0x76, 0x63, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x44, 0x44, 0x49,
	0x49, 0x22, 0x98, 0x01, 0x0a, 0x07, 0x69, 0x6e, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a,
	0x07, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x76, 0x65, 0x61, 0x6c, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08,
	0x41, 0x64, 0x64, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x10, 0x03, 0x12, 0x0f, 0x0a, 0x0b, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x10, 0x04, 0x12, 0x17, 0x0a, 0x13, 0x52,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x43, 0x68, 0x61,
	0x69, 0x6e, 0x10, 0x05, 0x12, 0x15, 0x0a, 0x11, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4d, 0x61,
	0x73, 0x74, 0x65, 0x72, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x10, 0x06, 0x12, 0x0f, 0x0a, 0x0b, 0x52,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x41, 0x44, 0x49, 0x10, 0x07, 0x22, 0x77, 0x0a, 0x08,
	0x42, 0x56, 0x43, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x37, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x42, 0x56, 0x43, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x05, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x22, 0xcf, 0x01, 0x0a, 0x03, 0x46, 0x65, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x44,
	0x44, 0x49, 0x49, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x44, 0x44, 0x49, 0x49, 0x12,
	0x18, 0x0a, 0x07, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x07, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x72, 0x65,
	0x64, 0x69, 0x74, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x43, 0x72, 0x65, 0x64,
	0x69, 0x74, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x49, 0x64, 0x78, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x53, 0x69, 0x67, 0x6e, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x49, 0x64, 0x78, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x69, 0x67, 0x6e, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x53, 0x69, 0x67, 0x6e,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x82, 0x03, 0x0a, 0x0a, 0x53, 0x75, 0x62, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x41, 0x64, 0x69, 0x43, 0x68, 0x61,
	0x69, 0x6e, 0x50, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x41, 0x64,
	0x69, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x50, 0x61, 0x74, 0x68, 0x12, 0x24, 0x0a, 0x0d, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x0d, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x63, 0x68, 0x61, 0x69, 0x6e,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x07, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x3a,
	0x0a, 0x0b, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41,
	0x63, 0x63, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x69,
	0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x31, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61,
	0x6d, 0x31, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x32, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x32, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1c,
	0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x1c,
	0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x2e, 0x0a, 0x12,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x41, 0x64, 0x69, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x50, 0x61,
	0x74, 0x68, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x41, 0x64, 0x69, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x50, 0x61, 0x74, 0x68, 0x22, 0x4e, 0x0a, 0x12,
	0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1c,
	0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x9b, 0x01, 0x0a,
	0x05, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x55,
	0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x55,
	0x72, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x41, 0x64, 0x69, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x41, 0x64, 0x69, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x12, 0x18,
	0x0a, 0x07, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x07, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x03, 0x49, 0x6e, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x41, 0x63, 0x63, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x03, 0x49, 0x6e, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x51, 0x75, 0x65, 0x72, 0x79, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x05, 0x51, 0x75, 0x65, 0x72, 0x79, 0x22, 0x33, 0x0a, 0x09, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22,
	0xc1, 0x01, 0x0a, 0x13, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x75, 0x62,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12,
	0x34, 0x0a, 0x0a, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61, 0x70, 0x69, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53,
	0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x73, 0x75, 0x62, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x74,
	0x65, 0x72, 0x61, 0x64, 0x69, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x73, 0x75, 0x62,
	0x6d, 0x69, 0x74, 0x74, 0x65, 0x72, 0x61, 0x64, 0x69, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x68, 0x61,
	0x72, 0x64, 0x61, 0x64, 0x69, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x73, 0x68, 0x61,
	0x72, 0x64, 0x61, 0x64, 0x69, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x22, 0x54, 0x0a, 0x10, 0x42, 0x56, 0x43, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x22, 0xd6, 0x01, 0x0a, 0x0a, 0x56, 0x61,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x6f, 0x72, 0x41, 0x64, 0x64, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0d, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x41, 0x64, 0x64, 0x72, 0x12, 0x20,
	0x0a, 0x0b, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0b, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x31, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x31,
	0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x32, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x32,
	0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x69,
	0x67, 0x6e, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x73, 0x69, 0x67, 0x6e,
	0x65, 0x64, 0x22, 0x4e, 0x0a, 0x0a, 0x56, 0x61, 0x6c, 0x52, 0x65, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f,
	0x64, 0x65, 0x22, 0x96, 0x02, 0x0a, 0x05, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x39,
	0x0a, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x61, 0x70, 0x69, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x2e, 0x6d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e,
	0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x06, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x22, 0x7e, 0x0a, 0x07, 0x6d,
	0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x13, 0x0a, 0x0f, 0x57, 0x72, 0x69, 0x74, 0x65, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x42, 0x79, 0x74, 0x65, 0x73, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x57,
	0x72, 0x69, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x10, 0x01, 0x12, 0x10,
	0x0a, 0x0c, 0x52, 0x65, 0x61, 0x64, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x10, 0x02,
	0x12, 0x10, 0x0a, 0x0c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x57, 0x72, 0x69, 0x74, 0x65,
	0x10, 0x64, 0x12, 0x0f, 0x0a, 0x0b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x61,
	0x64, 0x10, 0x65, 0x12, 0x16, 0x0a, 0x12, 0x47, 0x61, 0x73, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x61,
	0x6e, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x10, 0x69, 0x22, 0x20, 0x0a, 0x06, 0x48,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0x20, 0x0a,
	0x0a, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x44,
	0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x22,
	0xa3, 0x02, 0x0a, 0x07, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x2a, 0x0a, 0x10, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x10, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x61, 0x6e, 0x63,
	0x65, 0x12, 0x2f, 0x0a, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x61, 0x70, 0x69, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x06, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x73, 0x12, 0x2a, 0x0a, 0x10, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x41, 0x64, 0x64, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x61, 0x6c,
	0x6c, 0x6f, 0x77, 0x41, 0x64, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x26,
	0x0a, 0x0e, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x41, 0x64, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x41, 0x64, 0x64,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x1a, 0x3d, 0x0a, 0x05, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x69, 0x67, 0x68,
	0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x52,
	0x69, 0x67, 0x68, 0x74, 0x73, 0x22, 0x3d, 0x0a, 0x05, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x57, 0x0a, 0x0a, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41,
	0x64, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79,
	0x12, 0x2b, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x61, 0x70, 0x69, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x58, 0x0a,
	0x12, 0x47, 0x61, 0x73, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x61, 0x6e, 0x63, 0x65, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x4b, 0x65, 0x79, 0x12, 0x22, 0x0a, 0x0c, 0x67, 0x61, 0x73, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x61,
	0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x67, 0x61, 0x73, 0x41, 0x6c,
	0x6c, 0x6f, 0x77, 0x61, 0x6e, 0x63, 0x65, 0x22, 0x49, 0x0a, 0x05, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04,
	0x68, 0x61, 0x73, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x22, 0x4a, 0x0a, 0x08, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0x17,
	0x0a, 0x03, 0x4b, 0x65, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0x24, 0x0a, 0x08, 0x4e, 0x6f, 0x64, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x2a, 0xb1, 0x03,
	0x0a, 0x0e, 0x41, 0x63, 0x63, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x0b, 0x0a, 0x07, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x10, 0x00, 0x12, 0x15, 0x0a,
	0x11, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x10, 0x01, 0x12, 0x16, 0x0a, 0x12, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x55, 0x52,
	0x4c, 0x5f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x10, 0x02, 0x12, 0x15, 0x0a, 0x11,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x10, 0x03, 0x12, 0x17, 0x0a, 0x13, 0x44, 0x61, 0x74, 0x61, 0x5f, 0x43, 0x68, 0x61, 0x69,
	0x6e, 0x5f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x10, 0x04, 0x12, 0x0e, 0x0a, 0x0a,
	0x44, 0x61, 0x74, 0x61, 0x5f, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x10, 0x05, 0x12, 0x1a, 0x0a, 0x16,
	0x53, 0x63, 0x72, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x10, 0x06, 0x12, 0x11, 0x0a, 0x0d, 0x53, 0x63, 0x72, 0x61,
	0x74, 0x63, 0x68, 0x5f, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x10, 0x07, 0x12, 0x0f, 0x0a, 0x0b, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x49, 0x73, 0x73, 0x75, 0x65, 0x10, 0x08, 0x12, 0x0e, 0x0a, 0x0a,
	0x4b, 0x65, 0x79, 0x5f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x10, 0x09, 0x12, 0x0e, 0x0a, 0x0a,
	0x44, 0x65, 0x65, 0x70, 0x5f, 0x51, 0x75, 0x65, 0x72, 0x79, 0x10, 0x0a, 0x12, 0x0f, 0x0a, 0x0b,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x51, 0x75, 0x65, 0x72, 0x79, 0x10, 0x0b, 0x12, 0x0e, 0x0a,
	0x0a, 0x44, 0x61, 0x74, 0x61, 0x5f, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x10, 0x0c, 0x12, 0x0f, 0x0a,
	0x0b, 0x53, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x10, 0x0d, 0x12, 0x0e,
	0x0a, 0x0a, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x56, 0x6f, 0x74, 0x65, 0x10, 0x0e, 0x12, 0x1f,
	0x0a, 0x1b, 0x53, 0x79, 0x6e, 0x74, 0x68, 0x65, 0x74, 0x69, 0x63, 0x5f, 0x49, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x5f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x10, 0x11, 0x12,
	0x1f, 0x0a, 0x1b, 0x53, 0x79, 0x6e, 0x74, 0x68, 0x65, 0x74, 0x69, 0x63, 0x5f, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x5f, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x10, 0x13,
	0x12, 0x1b, 0x0a, 0x17, 0x53, 0x79, 0x6e, 0x74, 0x68, 0x65, 0x74, 0x69, 0x63, 0x5f, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x5f, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x10, 0x14, 0x12, 0x22, 0x0a,
	0x1e, 0x53, 0x79, 0x6e, 0x74, 0x68, 0x65, 0x74, 0x69, 0x63, 0x5f, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x10,
	0x15, 0x32, 0xe9, 0x03, 0x0a, 0x0a, 0x41, 0x70, 0x69, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x34, 0x0a, 0x09, 0x50, 0x6f, 0x73, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x14, 0x2e,
	0x61, 0x70, 0x69, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x42, 0x79,
	0x74, 0x65, 0x73, 0x1a, 0x0f, 0x2e, 0x61, 0x70, 0x69, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x33, 0x0a, 0x0c, 0x52, 0x65, 0x61, 0x64, 0x4b, 0x65,
	0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x0d, 0x2e, 0x61, 0x70, 0x69, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x4b, 0x65, 0x79, 0x1a, 0x12, 0x2e, 0x61, 0x70, 0x69, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x00, 0x12, 0x34, 0x0a, 0x0e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x0d, 0x2e,
	0x61, 0x70, 0x69, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4b, 0x65, 0x79, 0x1a, 0x11, 0x2e, 0x61,
	0x70, 0x69, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22,
	0x00, 0x12, 0x37, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x10, 0x2e, 0x61, 0x70, 0x69, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0x00, 0x12, 0x3b, 0x0a, 0x0b, 0x47, 0x65,
	0x74, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x1a, 0x12, 0x2e, 0x61, 0x70, 0x69, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x6f, 0x64,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x00, 0x12, 0x41, 0x0a, 0x09, 0x50, 0x72, 0x6f, 0x63, 0x65,
	0x73, 0x73, 0x54, 0x78, 0x12, 0x14, 0x2e, 0x61, 0x70, 0x69, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x1a, 0x1c, 0x2e, 0x61, 0x70, 0x69,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x49, 0x0a, 0x0f, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x53, 0x68, 0x61, 0x72, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1c, 0x2e, 0x61, 0x70, 0x69, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x53, 0x68, 0x61, 0x72, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x36, 0x0a, 0x0c, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x0f, 0x2e, 0x61, 0x70, 0x69, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x1a, 0x13, 0x2e, 0x61, 0x70, 0x69, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x42, 0x09, 0x5a,
	0x07, 0x2e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_proto_rawDescOnce sync.Once
	file_api_proto_rawDescData = file_api_proto_rawDesc
)

func file_api_proto_rawDescGZIP() []byte {
	file_api_proto_rawDescOnce.Do(func() {
		file_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_proto_rawDescData)
	})
	return file_api_proto_rawDescData
}

var file_api_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_api_proto_msgTypes = make([]protoimpl.MessageInfo, 24)
var file_api_proto_goTypes = []interface{}{
	(AccInstruction)(0),               // 0: apiProto.AccInstruction
	(DBVCInstructionHeaderInsType)(0), // 1: apiProto.DBVCInstructionHeader.insType
	(EntryMsgType)(0),                 // 2: apiProto.Entry.msgType
	(*ShardCountResponse)(nil),        // 3: apiProto.ShardCountResponse
	(*DBVCInstructionHeader)(nil),     // 4: apiProto.DBVCInstructionHeader
	(*BVCEntry)(nil),                  // 5: apiProto.BVCEntry
	(*Fee)(nil),                       // 6: apiProto.Fee
	(*Submission)(nil),                // 7: apiProto.Submission
	(*SubmissionResponse)(nil),        // 8: apiProto.SubmissionResponse
	(*Query)(nil),                     // 9: apiProto.Query
	(*QueryResp)(nil),                 // 10: apiProto.QueryResp
	(*ValidatorSubmission)(nil),       // 11: apiProto.ValidatorSubmission
	(*BVCEntryResponse)(nil),          // 12: apiProto.BVCEntryResponse
	(*ValRequest)(nil),                // 13: apiProto.ValRequest
	(*ValReponse)(nil),                // 14: apiProto.ValReponse
	(*Entry)(nil),                     // 15: apiProto.Entry
	(*Height)(nil),                    // 16: apiProto.Height
	(*EntryBytes)(nil),                // 17: apiProto.EntryBytes
	(*Account)(nil),                   // 18: apiProto.Account
	(*Group)(nil),                     // 19: apiProto.Group
	(*AccountAdd)(nil),                // 20: apiProto.AccountAdd
	(*GasAllowanceUpdate)(nil),        // 21: apiProto.GasAllowanceUpdate
	(*Reply)(nil),                     // 22: apiProto.Reply
	(*KeyValue)(nil),                  // 23: apiProto.KeyValue
	(*Key)(nil),                       // 24: apiProto.Key
	(*NodeInfo)(nil),                  // 25: apiProto.NodeInfo
	(*Account_Group)(nil),             // 26: apiProto.Account.Group
	(*empty.Empty)(nil),               // 27: google.protobuf.Empty
}
var file_api_proto_depIdxs = []int32{
	1,  // 0: apiProto.DBVCInstructionHeader.instruction:type_name -> apiProto.DBVCInstructionHeader.insType
	4,  // 1: apiProto.BVCEntry.header:type_name -> apiProto.DBVCInstructionHeader
	0,  // 2: apiProto.Submission.instruction:type_name -> apiProto.AccInstruction
	0,  // 3: apiProto.Query.Ins:type_name -> apiProto.AccInstruction
	7,  // 4: apiProto.ValidatorSubmission.submission:type_name -> apiProto.Submission
	2,  // 5: apiProto.Entry.messageType:type_name -> apiProto.Entry.msgType
	26, // 6: apiProto.Account.groups:type_name -> apiProto.Account.Group
	18, // 7: apiProto.AccountAdd.account:type_name -> apiProto.Account
	17, // 8: apiProto.ApiService.PostEntry:input_type -> apiProto.EntryBytes
	24, // 9: apiProto.ApiService.ReadKeyValue:input_type -> apiProto.Key
	24, // 10: apiProto.ApiService.RequestAccount:input_type -> apiProto.Key
	27, // 11: apiProto.ApiService.GetHeight:input_type -> google.protobuf.Empty
	27, // 12: apiProto.ApiService.GetNodeInfo:input_type -> google.protobuf.Empty
	7,  // 13: apiProto.ApiService.ProcessTx:input_type -> apiProto.Submission
	27, // 14: apiProto.ApiService.QueryShardCount:input_type -> google.protobuf.Empty
	9,  // 15: apiProto.ApiService.ProcessQuery:input_type -> apiProto.Query
	22, // 16: apiProto.ApiService.PostEntry:output_type -> apiProto.Reply
	23, // 17: apiProto.ApiService.ReadKeyValue:output_type -> apiProto.KeyValue
	18, // 18: apiProto.ApiService.RequestAccount:output_type -> apiProto.Account
	16, // 19: apiProto.ApiService.GetHeight:output_type -> apiProto.Height
	25, // 20: apiProto.ApiService.GetNodeInfo:output_type -> apiProto.NodeInfo
	8,  // 21: apiProto.ApiService.ProcessTx:output_type -> apiProto.SubmissionResponse
	3,  // 22: apiProto.ApiService.QueryShardCount:output_type -> apiProto.ShardCountResponse
	10, // 23: apiProto.ApiService.ProcessQuery:output_type -> apiProto.QueryResp
	16, // [16:24] is the sub-list for method output_type
	8,  // [8:16] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_api_proto_init() }
func file_api_proto_init() {
	if File_api_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShardCountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DBVCInstructionHeader); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BVCEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Fee); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Submission); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubmissionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Query); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidatorSubmission); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BVCEntryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValReponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Entry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Height); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EntryBytes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Account); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Group); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountAdd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GasAllowanceUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Reply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KeyValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Key); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Account_Group); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   24,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_proto_goTypes,
		DependencyIndexes: file_api_proto_depIdxs,
		EnumInfos:         file_api_proto_enumTypes,
		MessageInfos:      file_api_proto_msgTypes,
	}.Build()
	File_api_proto = out.File
	file_api_proto_rawDesc = nil
	file_api_proto_goTypes = nil
	file_api_proto_depIdxs = nil
}
