// Code generated by mockery v2.14.0. DO NOT EDIT.

package p2p

import (
	mock "github.com/stretchr/testify/mock"
	message "gitlab.com/accumulatenetwork/accumulate/pkg/api/v3/message"
)

// MockMessageStreamHandler is an autogenerated mock type for the MessageStreamHandler type
type MockMessageStreamHandler struct {
	mock.Mock
}

type MockMessageStreamHandler_Expecter struct {
	mock *mock.Mock
}

func (_m *MockMessageStreamHandler) EXPECT() *MockMessageStreamHandler_Expecter {
	return &MockMessageStreamHandler_Expecter{mock: &_m.Mock}
}

// Execute provides a mock function with given fields: _a0
func (_m *MockMessageStreamHandler) Execute(_a0 message.StreamOf[message.Message]) {
	_m.Called(_a0)
}

// MockMessageStreamHandler_Execute_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Execute'
type MockMessageStreamHandler_Execute_Call struct {
	*mock.Call
}

// Execute is a helper method to define mock.On call
//  - _a0 message.StreamOf[message.Message]
func (_e *MockMessageStreamHandler_Expecter) Execute(_a0 interface{}) *MockMessageStreamHandler_Execute_Call {
	return &MockMessageStreamHandler_Execute_Call{Call: _e.mock.On("Execute", _a0)}
}

func (_c *MockMessageStreamHandler_Execute_Call) Run(run func(_a0 message.StreamOf[message.Message])) *MockMessageStreamHandler_Execute_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(message.StreamOf[message.Message]))
	})
	return _c
}

func (_c *MockMessageStreamHandler_Execute_Call) Return() *MockMessageStreamHandler_Execute_Call {
	_c.Call.Return()
	return _c
}

type mockConstructorTestingTNewMockMessageStreamHandler interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockMessageStreamHandler creates a new instance of MockMessageStreamHandler. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockMessageStreamHandler(t mockConstructorTestingTNewMockMessageStreamHandler) *MockMessageStreamHandler {
	mock := &MockMessageStreamHandler{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
