.rules release:
  rules:
  - if: ($CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH || $CI_COMMIT_TAG != null) && $CI_PIPELINE_SOURCE != 'merge_request_event'

git describe:
  stage: pre deploy
  extends: .rules all
  needs: []
  script:
  - git fetch --unshallow
  - echo "GIT_DESCRIBE=$(git describe --dirty)" >> git.env
  artifacts:
    reports:
      dotenv: git.env

build binaries:
  stage: pre deploy
  extends: [ .rules release, .go ]
  needs: [ git describe ]
  before_script:
  - |
    function build {
      export GOOS=$1
      export GOARCH=$2
      BIN=accumulate
      [ -z "$GOOS" ] || BIN=${BIN}-${GOOS}
      [ -z "$GOARCH" ] || BIN=${BIN}-${GOARCH}
      [[ $GOOS == windows ]] && BIN=${BIN}.exe
      export BUILDFLAGS="-o ${BIN}"
      echo -e "${SECTION}section_start:`date +%s`:build_${GOOS}_${GOARCH}\r${SECTION}Build accumulate for $GOOS $GOARCH"
      make GIT_COMMIT=${CI_COMMIT_SHA} GIT_DESCRIBE=${GIT_DESCRIBE}
      echo -e "${SECTION}section_end:`date +%s`:build_${GOOS}_${GOARCH}\r${SECTION}";
    }
  script:
    - build linux amd64
    - build linux arm64
    - build windows amd64
    - build windows arm64
    - build darwin amd64
    - build darwin arm64
  artifacts:
    paths:
      - accumulate-*
