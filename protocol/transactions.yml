# Transactions - names should be verbs

Envelope:
  fields:
    - name: Signatures
      repeatable: true
      type: Signature
      marshal-as: value
      zero-value: nil
      unmarshal-with: UnmarshalSignature
    - name: TxHash
      type: bytes
      optional: true
    - name: Transaction
      type: Transaction
      marshal-as: reference
      pointer: true
      optional: true
    - name: hash
      type: bytes
      marshal-as: none

TransactionHeader:
  fields:
    - name: Principal
      type: url
      pointer: true
      alternative: Origin
    - name: Initiator
      type: chain
    - name: Memo
      type: string
      optional: true
    - name: Metadata
      type: bytes
      optional: true

Transaction:
  fields:
    - name: Header
      type: TransactionHeader
      marshal-as: reference
    - name: Body
      type: TransactionBody
      unmarshal-with: UnmarshalTransaction
      marshal-as: value
      zero-value: nil
    - name: hash
      type: bytes
      marshal-as: none

LegacyED25519Signature:
  union: { type: signature }
  fields:
    - name: privateKey
      type: bytes
      marshal-as: none
    - name: Timestamp
      type: uint
      alternative: Nonce
    - name: PublicKey
      type: bytes
    - name: Signature
      type: bytes
    - name: Signer
      type: url
      pointer: true
    - name: SignerHeight # TODO Rename to SignerVersion
      type: uint

RCD1Signature:
  union: { type: signature }
  fields:
    - name: privateKey
      type: bytes
      marshal-as: none
    - name: PublicKey
      type: bytes
    - name: Signature
      type: bytes
    - name: Signer
      type: url
      pointer: true
    - name: SignerHeight # TODO Rename to SignerVersion
      type: uint
    - name: Timestamp
      type: uint
      optional: true

ED25519Signature:
  union: { type: signature }
  fields:
    - name: privateKey
      type: bytes
      marshal-as: none
    - name: PublicKey
      type: bytes
    - name: Signature
      type: bytes
    - name: Signer
      type: url
      pointer: true
    - name: SignerHeight # TODO Rename to SignerVersion
      type: uint
    - name: Timestamp
      type: uint
      optional: true

ReceiptSignature:
  union: { type: signature }
  embeddings:
  - Receipt
  fields: []

SyntheticSignature:
  union: { type: signature }
  description: is used to initiate transactions between BVNs
  fields:
    - name: SourceNetwork
      description: is the network that produced the transaction
      type: url
      pointer: true
    - name: DestinationNetwork
      description: is the network that the transaction is sent to
      type: url
      pointer: true
    - name: SequenceNumber
      description: is the sequence number of the transaction
      type: uint

InternalSignature:
  union: { type: signature }
  description: is used when executing transactions internally
  fields:
    - name: Network
      description: is the network that produced the transaction
      type: url
      pointer: true

##### User #####

CreateIdentity:
  union: { type: transaction }
  fields:
    - name: Url
      type: url
      pointer: true
    - name: PublicKey
      type: bytes
      optional: true
    - name: KeyBookUrl
      type: url
      pointer: true
      optional: true
    - name: Manager
      type: url
      pointer: true
      optional: true

CreateTokenAccount:
  union: { type: transaction }
  fields:
    - name: Url
      type: url
      pointer: true
    - name: TokenUrl
      type: url
      pointer: true
    - name: KeyBookUrl
      type: url
      pointer: true
      optional: true
    - name: Scratch
      type: bool
      optional: true
    - name: Manager
      type: url
      pointer: true
      optional: true

SendTokens:
  union: { type: transaction }
  fields:
    - name: Hash
      type: chain
      optional: true
    - name: Meta
      type: rawJson
      optional: true
    - name: To
      repeatable: true
      type: TokenRecipient
      marshal-as: reference
      pointer: true

CreateDataAccount:
  union: { type: transaction }
  fields:
    - name: Url
      type: url
      pointer: true
    - name: KeyBookUrl
      type: url
      pointer: true
      optional: true
    - name: ManagerKeyBookUrl
      type: url
      pointer: true
      optional: true
    - name: Scratch
      type: bool
      optional: true

WriteData:
  union: { type: transaction }
  fields:
    - name: Entry
      type: DataEntry
      marshal-as: reference

WriteDataTo:
  union: { type: transaction }
  fields:
    - name: Recipient
      type: url
      pointer: true
    - name: Entry
      type: DataEntry
      marshal-as: reference

AcmeFaucet:
  union: { type: transaction }
  fields:
    

CreateToken:
  union: { type: transaction }
  fields:
    - name: Url
      type: url
      pointer: true
    - name: KeyBookUrl
      type: url
      pointer: true
      optional: true
    - name: Symbol
      type: string
    - name: Precision
      type: uvarint
    - name: Properties
      type: url
      pointer: true
      optional: true
    - name: InitialSupply
      type: bigint
      optional: true
    - name: HasSupplyLimit
      type: bool
      optional: true
    - name: Manager
      type: url
      pointer: true
      optional: true

IssueTokens:
  union: { type: transaction }
  fields:
    - name: Recipient
      type: url
      pointer: true
    - name: Amount
      type: bigint

BurnTokens:
  union: { type: transaction }
  fields:
    - name: Amount
      type: bigint

CreateKeyPage:
  union: { type: transaction }
  fields:
    - name: Keys
      repeatable: true
      type: KeySpecParams
      pointer: true
      marshal-as: reference
    - name: Manager
      type: url
      pointer: true
      optional: true

CreateKeyBook:
  union: { type: transaction }
  fields:
    - name: Url
      type: url
      pointer: true
    - name: PublicKeyHash
      type: bytes
    - name: Manager
      type: url
      pointer: true
      optional: true

AddCredits:
  union: { type: transaction }
  fields:
    - name: Recipient
      type: url
      pointer: true
    - name: Amount
      type: uvarint

UpdateKeyPage:
  union: { type: transaction }
  fields:
    - name: Operation
      type: KeyPageOperation
      marshal-as: value
      unmarshal-with: UnmarshalKeyPageOperation
      zero-value: nil

UpdateManager:
  union: { type: transaction }
  fields:
    - name: ManagerKeyBook
      type: url
      pointer: true

RemoveManager:
  union: { type: transaction }
  fields:

AddValidator:
  union: { type: transaction }
  fields:
    - name: Key
      type: bytes
    - name: Owner
      description: reserved for future use
      type: url
      pointer: true
      optional: true

RemoveValidator:
  union: { type: transaction }
  fields:
    - name: Key
      type: bytes
    - name: Owner
      description: reserved for future use
      type: url
      pointer: true
      optional: true

UpdateValidatorKey:
  union: { type: transaction }
  fields:
    - name: OldKey
      type: bytes
    - name: NewKey
      type: bytes

SignPending:
  union: { type: transaction }
  fields: []

##### Synthetic #####

SyntheticCreateChain:
  union: { type: transaction }
  fields:
    - name: Cause
      type: chain
    - name: Chains
      repeatable: true
      type: ChainParams
      marshal-as: reference


SyntheticWriteData:
  union: { type: transaction }
  fields:
    - name: Cause
      type: chain
    - name: Entry
      type: DataEntry
      marshal-as: reference

SyntheticDepositTokens:
  union: { type: transaction }
  fields:
    - name: Cause
      type: chain
    - name: Token
      type: url
      pointer: true
    - name: Amount
      type: bigint

SyntheticAnchor:
  union: { type: transaction }
  fields:
    - name: Source
      description: is the subnet the anchor originates from
      type: url
      pointer: true
    - name: Major
      description: indicates whether the anchor is a major block anchor
      type: bool
    - name: RootAnchor
      description: is the anchor of the source's root anchor chain
      type: chain
    - name: RootIndex
      description: is the index of the root anchor chain anchor
      type: uvarint
    - name: Block
      description: is the index of the block
      type: uvarint
    - name: AcmeOraclePrice
      type: uvarint
    - name: Receipts
      description: are receipts for anchors from other subnets that were included in the block
      type: Receipt
      repeatable: true
      marshal-as: reference

SyntheticDepositCredits:
  union: { type: transaction }
  fields:
    - name: Cause
      type: chain
    - name: Amount
      type: uvarint

SyntheticBurnTokens:
  union: { type: transaction }
  fields:
    - name: Cause
      type: chain
    - name: Amount
      type: bigint

SyntheticMirror:
  union: { type: transaction }
  fields:
    - name: Objects
      repeatable: true
      type: AnchoredRecord
      marshal-as: reference

SegWitDataEntry:
  union: { type: transaction }
  fields:
    - name: Cause
      type: chain
    - name: EntryUrl
      type: url
      pointer: true
    - name: EntryHash
      type: chain

##### Key Page Operations #####

AddKeyOperation:
  union: { type: keyPageOperation, value: Add }
  fields:
    - name: Entry
      type: KeySpecParams
      marshal-as: reference

RemoveKeyOperation:
  union: { type: keyPageOperation, value: Remove }
  fields:
    - name: Entry
      type: KeySpecParams
      marshal-as: reference

UpdateKeyOperation:
  union: { type: keyPageOperation, value: Update }
  fields:
    - name: OldEntry
      type: KeySpecParams
      marshal-as: reference
    - name: NewEntry
      type: KeySpecParams
      marshal-as: reference

SetThresholdKeyPageOperation:
  union: { type: keyPageOperation }
  fields:
    - name: Threshold
      type: uvarint

UpdateAllowedKeyPageOperation:
  union: { type: keyPageOperation }
  fields:
    - name: Allow
      type: TransactionType
      repeatable: true
      marshal-as: enum
      optional: true
    - name: Deny
      type: TransactionType
      repeatable: true
      marshal-as: enum
      optional: true


##### Result Types #####

EmptyResult:
  union: { type: result, value: Unknown }
  fields: []

WriteDataResult:
  union: { type: result }
  fields:
    - name: EntryHash
      type: chain
    - name: AccountUrl
      type: url
      pointer: true
    - name: AccountID
      type: bytes

##### Data Types #####

UpdateAllowedTransactions:
  fields:
    - name: Whitelist
      description: is reserved for future use
      type: bool
      optional: true
    - name: Transactions
      description: is a list of allowed transaction types
      type: TransactionType
      marshal-as: enum
      repeatable: true
      optional: true

TokenRecipient:
  fields:
    - name: Url
      type: url
      pointer: true
    - name: Amount
      type: bigint

ChainParams:
  fields:
    - name: Data
      type: bytes
    - name: IsUpdate
      type: bool

KeySpecParams:
  fields:
    - name: PublicKey
      type: bytes
    - name: Owner
      type: url
      pointer: true
      optional: true

AnchoredRecord:
  fields:
    - name: Record
      type: bytes
    - name: Anchor
      type: chain
