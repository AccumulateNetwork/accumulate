package typegen

// GENERATED BY go run ./tools/cmd/gen-types. DO NOT EDIT.

import (
	"encoding/json"
	"fmt"
)

// NewRecord creates a new Record for the specified RecordType.
func NewRecord(typ RecordType) (Record, error) {
	switch typ {
	case RecordTypeChain:
		return new(ChainRecord), nil
	case RecordTypeEntity:
		return new(EntityRecord), nil
	case RecordTypeIndex:
		return new(IndexRecord), nil
	case RecordTypeOther:
		return new(OtherRecord), nil
	case RecordTypeState:
		return new(StateRecord), nil
	default:
		return nil, fmt.Errorf("unknown record %v", typ)
	}
}

// UnmarshalRecordJson unmarshals a Record.
func UnmarshalRecordJSON(data []byte) (Record, error) {
	var typ *struct{ Type RecordType }
	err := json.Unmarshal(data, &typ)
	if err != nil {
		return nil, err
	}

	if typ == nil {
		return nil, nil
	}

	acnt, err := NewRecord(typ.Type)
	if err != nil {
		return nil, err
	}

	err = json.Unmarshal(data, acnt)
	if err != nil {
		return nil, err
	}

	return acnt, nil
}
