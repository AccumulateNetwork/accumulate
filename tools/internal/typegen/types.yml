RecordBase:
  non-binary: true
  incomparable: true
  fields:
    - name: Name
      type: string
    - name: Key
      type: string
    - name: Description
      type: string
    - name: Parent
      type: EntityRecord
      pointer: true
    - name: Private
      type: bool
    - name: OmitAccessor
      type: bool
    - name: OmitConstructor
      type: bool
    - name: CustomValueConstructor
      type: bool
    - name: TypeParameters
      type: TypeParameter
      pointer: true
      marshal-as: reference
      repeatable: true
    - name: Parameters
      type: Field
      pointer: true
      marshal-as: reference
      repeatable: true
    - name: Index
      type: string

TypeParameter:
  fields:
    - name: Name
      type: string
    - name: Constraint
      type: string

EntityRecord:
  non-binary: true
  incomparable: true
  union: { type: record }
  fields:
    - type: RecordBase
      marshal-as: reference
    - name: Fields
      type: Field
      pointer: true
      marshal-as: reference
      repeatable: true
    - name: CustomCommit
      type: bool
    - name: CustomResolve
      type: bool
    - name: CustomIsDirty
      type: bool
    - name: CustomWalk
      type: bool
    - name: OmitCommit
      type: bool
    - name: OmitResolve
      type: bool
    - name: OmitIsDirty
      type: bool
    - name: OmitWalk
      type: bool
    - name: ValueStore # Use a custom store for values
      type: string
    - name: Root
      type: bool
    - name: Interface
      type: bool
    - name: Attributes
      type: Record
      marshal-as: union
      repeatable: true

ChainRecord:
  non-binary: true
  incomparable: true
  union: { type: record }
  fields:
    - type: RecordBase
      marshal-as: reference
    - name: ChainType
      type: string

StateRecord:
  non-binary: true
  incomparable: true
  union: { type: record }
  fields:
    - type: RecordBase
      marshal-as: reference
    - name: DataType
      type: FieldType
      marshal-as: reference
    - name: Pointer
      type: bool
    - name: EmptyIfMissing
      type: bool
    - name: Union
      type: bool
    - name: Collection
      type: CollectionType
      marshal-as: enum
    - name: Comparator
      type: string

IndexRecord:
  non-binary: true
  incomparable: true
  union: { type: record }
  fields:
    - type: RecordBase
      marshal-as: reference
    - name: DataType
      type: FieldType
      marshal-as: reference
    - name: Pointer
      type: bool
    - name: EmptyIfMissing
      type: bool
    - name: Union
      type: bool
    - name: Collection
      type: CollectionType
      marshal-as: enum
    - name: Comparator
      type: string

OtherRecord:
  non-binary: true
  incomparable: true
  union: { type: record }
  fields:
    - type: RecordBase
      marshal-as: reference
    - name: DataType
      type: string
    - name: Pointer
      type: bool
    - name: HasChains
      type: bool
    - name: Constructor
      type: string
