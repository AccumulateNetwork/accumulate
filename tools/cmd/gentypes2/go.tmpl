package {{.Package}}

// GENERATED BY go run ./tools/cmd/gentypes2. DO NOT EDIT.

import (
	"encoding/json"
	"fmt"
	"strings"
)

{{range .Types}}
{{$typ := .Name}}
{{range .Values}}
// {{$typ}}{{.Name}} {{.Description}}.
const {{$typ}}{{.Name}} {{$typ}} = {{.Value}}
{{end}}
{{end}}

{{range .Types}}
// ID returns the ID of the {{natural .Name}}
func (v {{.Name}}) ID() uint64 { return uint64(v) }

// String returns the name of the {{natural .Name}}
func (v {{.Name}}) String() string {
	switch v {
	{{- $typ := .Name}}
	{{- range .Values}}
	case {{$typ}}{{.Name}}:
		return "{{lower .Name}}"
	{{- end}}
	default:
		return fmt.Sprintf("{{.Name}}:%d", v)
	}
}

// {{.Name}}ByName returns the named {{natural .Name}}.
func {{.Name}}ByName(name string) ({{.Name}}, bool) {
	switch name {
	{{- $typ := .Name}}
	{{- range .Values}}
	case "{{lower .Name}}":
		return {{$typ}}{{.Name}}, true
	{{- end}}
	default:
		return 0, false
	}
}

// MarshalJSON marshals the {{natural .Name}} to JSON as a string.
func (v {{.Name}}) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.String())
}

// UnmarshalJSON unmarshals the {{natural .Name}} from JSON as a string.
func (v *{{.Name}}) UnmarshalJSON(data []byte) error {
	var s string
	err := json.Unmarshal(data, &s)
	if err != nil {
		return err
	}

	var ok bool
	*v, ok = {{.Name}}ByName(s)
	if !ok || strings.ContainsRune(v.String(), ':') {
		return fmt.Errorf("invalid {{natural .Name}} %q", s)
	}
	return nil
}

// BinarySize returns the number of bytes required to binary marshal the {{natural .Name}}.
func (v {{.Name}}) BinarySize() int {
	return encoding.UvarintBinarySize(v.ID())
}

// MarshalBinary marshals the {{natural .Name}} to bytes as a unsigned varint.
func (v {{.Name}}) MarshalBinary() ([]byte, error) {
	return encoding.UvarintMarshalBinary(v.ID()), nil
}

// UnmarshalBinary unmarshals the {{natural .Name}} from bytes as a unsigned varint.
func (v *{{.Name}}) UnmarshalBinary(data []byte) error {
	u, err := encoding.UvarintUnmarshalBinary(data)
	if err != nil {
		return err
	}

	*v = {{.Name}}(u)
	return nil
}


{{end}}
