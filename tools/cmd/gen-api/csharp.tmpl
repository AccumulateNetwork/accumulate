// GENERATED BY gen-api. DO NOT EDIT.

using System;

namespace {{.Package}}.Generated.Api
{
    public enum RPCMethod
    {
        {{- range .Methods}}
        {{.Name}},
        {{- end}}
    }

    public static class RPCMethodExtensions
    {
        public static string GetApiMethod(this RPCMethod method)
        {
            switch (method)
            {
                {{- range .Methods}}
                case RPCMethod.{{.Name}}:
                    return "{{.RPC}}";
                {{- end}}
                default:
                    throw new ArgumentException("Unknown RPC method: " + method);
            }
        }

        public static Type GetRequestType(this RPCMethod method)
        {
            switch (method)
            {
                {{- range .Methods}}
                case RPCMethod.{{.Name}}:
                    return {{if eq .Input ""}}null{{else}}{{.Input}}{{end}};
                {{- end}}
                default:
                    throw new ArgumentException("Unknown RPC method: " + method);
            }
        }

        public static RPCMethod FromRequestType(Type requestType)
        {
            foreach (RPCMethod method in Enum.GetValues(typeof(RPCMethod)))
            {
                Type type = method.GetRequestType();
                if (type != null && type == requestType)
                {
                    return method;
                }
            }
            throw new ArgumentException("No RPC method found for type: " + requestType);
        }
    }
} 