package {{.Package}}.models;

import {{.Package}}.protocol.*;
import {{.Package}}.support.*;

{{- if .IsUnion}}{{skip}}{{end}}

public class {{.Name}} {

	{{- range .Fields}}
	{{-   if and (.Virtual)}}
	public static final {{resolveType .}} {{lcName .Name}} = {{resolveType .}}.{{underscoreUpperCase .ParentTypeName}};
	{{-   end}}
	{{- end}}

	{{- range .Fields}}
	{{-   if and (not .Virtual)}}
	private {{resolveType .}} {{lcName .Name}};
	{{-   end}}
	{{- end}}

	{{- range .Fields}}
	{{-   if and (not .Virtual)}}

	public {{resolveType .}} get{{.Name}}() {
	    return {{lcName .Name}};
	}

	public void set{{.Name}}(final {{resolveType .}} value) {
	    this.{{lcName .Name}} = value;
	}

	public {{.ParentTypeName}} {{lcName .Name}}(final {{resolveType .}} value) {
	    set{{.Name}}(value);
	    return this;
	}
	{{-   end}}
	{{- end}}

    public byte[] marshalBinary() {
        final var marshaller = new Marshaller();
        {{- range .Fields}}
        {{-   if and .IsBinary .IsMarshalled}}
        {{-     if .OmitEmpty}}
        if (!({{isZero . (print "this." (lcName .Name))}})) {
        {{-       if .Type.IsKnown}}
            marshaller.write{{.Type.Title}}({{.Number}}, this.{{lcName .Name}});
        {{-       else }}
            marshaller.writeValue({{.Number}}, {{lcName .Name}});
        {{-       end}}
        }
        {{-     else }}
        {{-       if .Type.IsKnown}}
        marshaller.write{{.Type.Title}}({{.Number}}, this.{{lcName .Name}});
        {{-       else }}
        marshaller.writeValue({{.Number}}, {{lcName .Name}});
        {{-       end}}
        {{-     end}}
        {{-   end}}
        {{- end}}
        return marshaller.array();
    }
}