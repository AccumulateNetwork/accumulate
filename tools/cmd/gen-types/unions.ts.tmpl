import * as types from ".";

// DO NOT EDIT. Generated by gitlab.com/accumulatenetwork/accumulate/tools/cmd/gen-types.

/* eslint-disable @typescript-eslint/no-namespace */

{{  range .Unions}}
{{- $typ := .}}
{{-   if not (eq .Type "result")}}
export type {{.Interface}} =
  {{- range .Members}}
  | types.{{.FullName false true}}
  {{- end}};

export namespace {{.Interface}} {
  export type Args =
  {{- range .Members}}
    | types.{{.FullName false true}} | types.{{.FullName false true}}.ArgsWithType
  {{- end}};

  export function fromObject(obj: Args): {{.Interface}} {
    {{- range .Members}}
    if (obj instanceof types.{{.FullName false true}}) return obj
    {{- end}}

    switch (obj.type) {
    {{- range .Members}}
    case types.{{$typ.Enumeration}}.{{.UnionValue}}, '{{lcName .UnionValue}}':
      return new types.{{.FullName false true}}(obj)
    {{- end}}
    }

    throw new Error(`Unknown {{natural .Interface}} '${obj.type}'`)
  }
}
{{    end}}
{{- end}}