
// DO NOT EDIT. Generated by gitlab.com/accumulatenetwork/accumulate/tools/cmd/gen-types.

/* eslint-disable @typescript-eslint/no-namespace */

{{  $lud := .LongUnionDiscriminator -}}
{{  range .Unions}}
{{- $typ := .}}
{{-   if not (eq .Type "result")}}
export type {{.Interface}} =
  {{- range .Members}}
  | types.{{.TypescriptFullName false false false true}}
  {{- end}};

export type {{.Interface}}Args =
{{- range .Members}}
  | types.{{.TypescriptFullName false false false true}} | types.{{.TypescriptFullName true true false true}}
{{- end}};

/** @ignore */
export namespace {{.Interface}} {
  export function fromObject(obj: {{.Interface}}Args): {{.Interface}} {
    {{- range .Members}}
    if (obj instanceof types.{{.TypescriptFullName false false false true}}) return obj
    {{- end}}

    switch (obj.{{if $lud}}{{lcName .Enumeration}}{{else}}type{{end}}) {
    {{- range .Members}}
    case types.{{$typ.Enumeration}}.{{.UnionValue}}:
    case '{{lcName .UnionValue}}':
      return new types.{{.TypescriptFullName false false false true}}(obj)
    {{- end}}
    default:
      throw new Error(`Unknown {{natural .Interface}} '${(obj as any).{{if $lud}}{{lcName .Enumeration}}{{else}}type{{end}}}'`)
    }
  }
}
{{    end}}
{{- end}}