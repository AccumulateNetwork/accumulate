// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api.proto

/*
Package proto is a generated protocol buffer package.

It is generated from these files:
	api.proto

It has these top-level messages:
	ValRequest
	ValReponse
	Entry
	Height
	EntryBytes
	Account
	Group
	AccountAdd
	GasAllowanceUpdate
	Reply
	KeyValue
	Key
	NodeInfo
*/
package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/golang/protobuf/ptypes/empty"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto1.ProtoPackageIsVersion2 // please upgrade the proto package

type EntryMsgType int32

const (
	Entry_WriteEntryBytes    EntryMsgType = 0
	Entry_WriteKeyValue      EntryMsgType = 1
	Entry_ReadKeyValue       EntryMsgType = 2
	Entry_AccountWrite       EntryMsgType = 100
	Entry_AccountRead        EntryMsgType = 101
	Entry_GasAllowanceUpdate EntryMsgType = 105
)

var EntryMsgType_name = map[int32]string{
	0:   "WriteEntryBytes",
	1:   "WriteKeyValue",
	2:   "ReadKeyValue",
	100: "AccountWrite",
	101: "AccountRead",
	105: "GasAllowanceUpdate",
}
var EntryMsgType_value = map[string]int32{
	"WriteEntryBytes":    0,
	"WriteKeyValue":      1,
	"ReadKeyValue":       2,
	"AccountWrite":       100,
	"AccountRead":        101,
	"GasAllowanceUpdate": 105,
}

func (x EntryMsgType) String() string {
	return proto1.EnumName(EntryMsgType_name, int32(x))
}
func (EntryMsgType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{2, 0} }

type ValRequest struct {
	ValidatorClass uint32 `protobuf:"varint,1,opt,name=validatorClass" json:"validatorClass,omitempty"`
	Instruction    uint32 `protobuf:"varint,2,opt,name=instruction" json:"instruction,omitempty"`
	Parameter1     uint32 `protobuf:"varint,3,opt,name=parameter1" json:"parameter1,omitempty"`
	Parameter2     uint32 `protobuf:"varint,4,opt,name=parameter2" json:"parameter2,omitempty"`
	Nonce          uint64 `protobuf:"varint,5,opt,name=nonce" json:"nonce,omitempty"`
	Data           []byte `protobuf:"bytes,6,opt,name=data,proto3" json:"data,omitempty"`
	Signed         []byte `protobuf:"bytes,7,opt,name=signed,proto3" json:"signed,omitempty"`
}

func (m *ValRequest) Reset()                    { *m = ValRequest{} }
func (m *ValRequest) String() string            { return proto1.CompactTextString(m) }
func (*ValRequest) ProtoMessage()               {}
func (*ValRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *ValRequest) GetValidatorClass() uint32 {
	if m != nil {
		return m.ValidatorClass
	}
	return 0
}

func (m *ValRequest) GetInstruction() uint32 {
	if m != nil {
		return m.Instruction
	}
	return 0
}

func (m *ValRequest) GetParameter1() uint32 {
	if m != nil {
		return m.Parameter1
	}
	return 0
}

func (m *ValRequest) GetParameter2() uint32 {
	if m != nil {
		return m.Parameter2
	}
	return 0
}

func (m *ValRequest) GetNonce() uint64 {
	if m != nil {
		return m.Nonce
	}
	return 0
}

func (m *ValRequest) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *ValRequest) GetSigned() []byte {
	if m != nil {
		return m.Signed
	}
	return nil
}

type ValReponse struct {
	ResponseData []byte `protobuf:"bytes,1,opt,name=responseData,proto3" json:"responseData,omitempty"`
	ErrorCode    uint64 `protobuf:"varint,2,opt,name=errorCode" json:"errorCode,omitempty"`
}

func (m *ValReponse) Reset()                    { *m = ValReponse{} }
func (m *ValReponse) String() string            { return proto1.CompactTextString(m) }
func (*ValReponse) ProtoMessage()               {}
func (*ValReponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *ValReponse) GetResponseData() []byte {
	if m != nil {
		return m.ResponseData
	}
	return nil
}

func (m *ValReponse) GetErrorCode() uint64 {
	if m != nil {
		return m.ErrorCode
	}
	return 0
}

type Entry struct {
	Key         []byte       `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	MessageType EntryMsgType `protobuf:"varint,2,opt,name=messageType,enum=apiProto.EntryMsgType" json:"messageType,omitempty"`
	Nonce       uint64       `protobuf:"varint,3,opt,name=nonce" json:"nonce,omitempty"`
	Data        []byte       `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	Signed      []byte       `protobuf:"bytes,5,opt,name=signed,proto3" json:"signed,omitempty"`
}

func (m *Entry) Reset()                    { *m = Entry{} }
func (m *Entry) String() string            { return proto1.CompactTextString(m) }
func (*Entry) ProtoMessage()               {}
func (*Entry) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Entry) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *Entry) GetMessageType() EntryMsgType {
	if m != nil {
		return m.MessageType
	}
	return Entry_WriteEntryBytes
}

func (m *Entry) GetNonce() uint64 {
	if m != nil {
		return m.Nonce
	}
	return 0
}

func (m *Entry) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *Entry) GetSigned() []byte {
	if m != nil {
		return m.Signed
	}
	return nil
}

type Height struct {
	Height uint64 `protobuf:"varint,1,opt,name=height" json:"height,omitempty"`
}

func (m *Height) Reset()                    { *m = Height{} }
func (m *Height) String() string            { return proto1.CompactTextString(m) }
func (*Height) ProtoMessage()               {}
func (*Height) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *Height) GetHeight() uint64 {
	if m != nil {
		return m.Height
	}
	return 0
}

type EntryBytes struct {
	Data []byte `protobuf:"bytes,1,opt,name=Data,proto3" json:"Data,omitempty"`
}

func (m *EntryBytes) Reset()                    { *m = EntryBytes{} }
func (m *EntryBytes) String() string            { return proto1.CompactTextString(m) }
func (*EntryBytes) ProtoMessage()               {}
func (*EntryBytes) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *EntryBytes) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type Account struct {
	Name             string           `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Owner            string           `protobuf:"bytes,2,opt,name=owner" json:"owner,omitempty"`
	MessageAllowance int32            `protobuf:"varint,3,opt,name=messageAllowance" json:"messageAllowance,omitempty"`
	Groups           []*Account_Group `protobuf:"bytes,4,rep,name=groups" json:"groups,omitempty"`
	AllowAddAccounts bool             `protobuf:"varint,5,opt,name=allowAddAccounts" json:"allowAddAccounts,omitempty"`
	AllowAddGroups   bool             `protobuf:"varint,6,opt,name=allowAddGroups" json:"allowAddGroups,omitempty"`
}

func (m *Account) Reset()                    { *m = Account{} }
func (m *Account) String() string            { return proto1.CompactTextString(m) }
func (*Account) ProtoMessage()               {}
func (*Account) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *Account) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Account) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *Account) GetMessageAllowance() int32 {
	if m != nil {
		return m.MessageAllowance
	}
	return 0
}

func (m *Account) GetGroups() []*Account_Group {
	if m != nil {
		return m.Groups
	}
	return nil
}

func (m *Account) GetAllowAddAccounts() bool {
	if m != nil {
		return m.AllowAddAccounts
	}
	return false
}

func (m *Account) GetAllowAddGroups() bool {
	if m != nil {
		return m.AllowAddGroups
	}
	return false
}

type Account_Group struct {
	Name        string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	AdminRights bool   `protobuf:"varint,2,opt,name=adminRights" json:"adminRights,omitempty"`
}

func (m *Account_Group) Reset()                    { *m = Account_Group{} }
func (m *Account_Group) String() string            { return proto1.CompactTextString(m) }
func (*Account_Group) ProtoMessage()               {}
func (*Account_Group) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5, 0} }

func (m *Account_Group) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Account_Group) GetAdminRights() bool {
	if m != nil {
		return m.AdminRights
	}
	return false
}

type Group struct {
	Name        string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
}

func (m *Group) Reset()                    { *m = Group{} }
func (m *Group) String() string            { return proto1.CompactTextString(m) }
func (*Group) ProtoMessage()               {}
func (*Group) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *Group) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Group) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

type AccountAdd struct {
	PublicKey []byte   `protobuf:"bytes,1,opt,name=publicKey,proto3" json:"publicKey,omitempty"`
	Account   *Account `protobuf:"bytes,2,opt,name=account" json:"account,omitempty"`
}

func (m *AccountAdd) Reset()                    { *m = AccountAdd{} }
func (m *AccountAdd) String() string            { return proto1.CompactTextString(m) }
func (*AccountAdd) ProtoMessage()               {}
func (*AccountAdd) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *AccountAdd) GetPublicKey() []byte {
	if m != nil {
		return m.PublicKey
	}
	return nil
}

func (m *AccountAdd) GetAccount() *Account {
	if m != nil {
		return m.Account
	}
	return nil
}

type GasAllowanceUpdate struct {
	AccountKey   []byte `protobuf:"bytes,1,opt,name=accountKey,proto3" json:"accountKey,omitempty"`
	GasAllowance int32  `protobuf:"varint,2,opt,name=gasAllowance" json:"gasAllowance,omitempty"`
}

func (m *GasAllowanceUpdate) Reset()                    { *m = GasAllowanceUpdate{} }
func (m *GasAllowanceUpdate) String() string            { return proto1.CompactTextString(m) }
func (*GasAllowanceUpdate) ProtoMessage()               {}
func (*GasAllowanceUpdate) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *GasAllowanceUpdate) GetAccountKey() []byte {
	if m != nil {
		return m.AccountKey
	}
	return nil
}

func (m *GasAllowanceUpdate) GetGasAllowance() int32 {
	if m != nil {
		return m.GasAllowance
	}
	return 0
}

type Reply struct {
	Hash   []byte `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	Height uint64 `protobuf:"varint,2,opt,name=height" json:"height,omitempty"`
	Error  string `protobuf:"bytes,3,opt,name=error" json:"error,omitempty"`
}

func (m *Reply) Reset()                    { *m = Reply{} }
func (m *Reply) String() string            { return proto1.CompactTextString(m) }
func (*Reply) ProtoMessage()               {}
func (*Reply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *Reply) GetHash() []byte {
	if m != nil {
		return m.Hash
	}
	return nil
}

func (m *Reply) GetHeight() uint64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *Reply) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

type KeyValue struct {
	Key    []byte `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value  []byte `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	Height uint64 `protobuf:"varint,3,opt,name=height" json:"height,omitempty"`
}

func (m *KeyValue) Reset()                    { *m = KeyValue{} }
func (m *KeyValue) String() string            { return proto1.CompactTextString(m) }
func (*KeyValue) ProtoMessage()               {}
func (*KeyValue) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *KeyValue) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *KeyValue) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *KeyValue) GetHeight() uint64 {
	if m != nil {
		return m.Height
	}
	return 0
}

type Key struct {
	Key []byte `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
}

func (m *Key) Reset()                    { *m = Key{} }
func (m *Key) String() string            { return proto1.CompactTextString(m) }
func (*Key) ProtoMessage()               {}
func (*Key) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *Key) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

type NodeInfo struct {
	Version string `protobuf:"bytes,1,opt,name=version" json:"version,omitempty"`
}

func (m *NodeInfo) Reset()                    { *m = NodeInfo{} }
func (m *NodeInfo) String() string            { return proto1.CompactTextString(m) }
func (*NodeInfo) ProtoMessage()               {}
func (*NodeInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *NodeInfo) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func init() {
	proto1.RegisterType((*ValRequest)(nil), "apiProto.ValRequest")
	proto1.RegisterType((*ValReponse)(nil), "apiProto.ValReponse")
	proto1.RegisterType((*Entry)(nil), "apiProto.Entry")
	proto1.RegisterType((*Height)(nil), "apiProto.Height")
	proto1.RegisterType((*EntryBytes)(nil), "apiProto.EntryBytes")
	proto1.RegisterType((*Account)(nil), "apiProto.Account")
	proto1.RegisterType((*Account_Group)(nil), "apiProto.Account.Group")
	proto1.RegisterType((*Group)(nil), "apiProto.Group")
	proto1.RegisterType((*AccountAdd)(nil), "apiProto.AccountAdd")
	proto1.RegisterType((*GasAllowanceUpdate)(nil), "apiProto.GasAllowanceUpdate")
	proto1.RegisterType((*Reply)(nil), "apiProto.Reply")
	proto1.RegisterType((*KeyValue)(nil), "apiProto.KeyValue")
	proto1.RegisterType((*Key)(nil), "apiProto.Key")
	proto1.RegisterType((*NodeInfo)(nil), "apiProto.NodeInfo")
	proto1.RegisterEnum("apiProto.EntryMsgType", EntryMsgType_name, EntryMsgType_value)
}

func init() { proto1.RegisterFile("api.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 793 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x55, 0xdd, 0xae, 0xdb, 0x44,
	0x10, 0xce, 0x9f, 0xf3, 0x33, 0x39, 0x3f, 0xee, 0x72, 0xd4, 0x5a, 0x01, 0xa1, 0x68, 0x85, 0xd0,
	0x11, 0x48, 0x39, 0x22, 0xad, 0x84, 0x10, 0xe2, 0x22, 0x2d, 0x55, 0x28, 0x47, 0xaa, 0xaa, 0x05,
	0x5a, 0xc4, 0xdd, 0xd6, 0x9e, 0xfa, 0x58, 0x38, 0x5e, 0xb3, 0xbb, 0x39, 0x95, 0x6f, 0x78, 0x0c,
	0x5e, 0xa0, 0x2f, 0xc5, 0xe3, 0xa0, 0x1d, 0xdb, 0xb1, 0xf3, 0x83, 0x7a, 0xe5, 0x99, 0x6f, 0xbe,
	0x99, 0xd9, 0x99, 0x9d, 0xf1, 0xc2, 0x44, 0xe6, 0xc9, 0x22, 0xd7, 0xca, 0x2a, 0x36, 0x96, 0x79,
	0xf2, 0xca, 0x49, 0xb3, 0x4f, 0x63, 0xa5, 0xe2, 0x14, 0x6f, 0x08, 0x7f, 0xbb, 0x7d, 0x77, 0x83,
	0x9b, 0xdc, 0x16, 0x25, 0x8d, 0xff, 0xdb, 0x05, 0x78, 0x2d, 0x53, 0x81, 0x7f, 0x6d, 0xd1, 0x58,
	0xf6, 0x25, 0x5c, 0xdc, 0xcb, 0x34, 0x89, 0xa4, 0x55, 0xfa, 0x59, 0x2a, 0x8d, 0x09, 0xba, 0xf3,
	0xee, 0xf5, 0xb9, 0x38, 0x40, 0xd9, 0x1c, 0xa6, 0x49, 0x66, 0xac, 0xde, 0x86, 0x36, 0x51, 0x59,
	0xd0, 0x23, 0x52, 0x1b, 0x62, 0x9f, 0x03, 0xe4, 0x52, 0xcb, 0x0d, 0x5a, 0xd4, 0xdf, 0x04, 0x7d,
	0x22, 0xb4, 0x90, 0x3d, 0xfb, 0x32, 0x18, 0x1c, 0xd8, 0x97, 0xec, 0x0a, 0xbc, 0x4c, 0x65, 0x21,
	0x06, 0xde, 0xbc, 0x7b, 0x3d, 0x10, 0xa5, 0xc2, 0x18, 0x0c, 0x22, 0x69, 0x65, 0x30, 0x9c, 0x77,
	0xaf, 0xcf, 0x04, 0xc9, 0xec, 0x21, 0x0c, 0x4d, 0x12, 0x67, 0x18, 0x05, 0x23, 0x42, 0x2b, 0x8d,
	0xbf, 0xac, 0x2a, 0xcb, 0x55, 0x66, 0x90, 0x71, 0x38, 0xd3, 0x68, 0x48, 0xfe, 0xd1, 0x45, 0xe8,
	0x12, 0x77, 0x0f, 0x63, 0x9f, 0xc1, 0x04, 0xb5, 0x56, 0xfa, 0x99, 0x8a, 0x90, 0x6a, 0x1a, 0x88,
	0x06, 0xe0, 0xff, 0xf4, 0xc0, 0x7b, 0x9e, 0x59, 0x5d, 0x30, 0x1f, 0xfa, 0x7f, 0x62, 0x51, 0x85,
	0x70, 0x22, 0xfb, 0x0e, 0xa6, 0x1b, 0x34, 0x46, 0xc6, 0xf8, 0x6b, 0x91, 0x97, 0xbe, 0x17, 0xcb,
	0x47, 0x8b, 0xfa, 0x0e, 0x16, 0xe4, 0xb7, 0xd8, 0x98, 0xd8, 0x99, 0x45, 0x9b, 0xdb, 0x14, 0xda,
	0x3f, 0x55, 0xe8, 0xe0, 0x64, 0xa1, 0xde, 0x5e, 0xa1, 0x7f, 0xc3, 0xa8, 0x8a, 0xcc, 0x3e, 0x81,
	0xcb, 0x37, 0x3a, 0xb1, 0x48, 0xf9, 0x9e, 0x16, 0x16, 0x8d, 0xdf, 0x61, 0x0f, 0xe0, 0x9c, 0xc0,
	0x5b, 0x2c, 0x5e, 0xcb, 0x74, 0x8b, 0x7e, 0x97, 0xf9, 0x70, 0x26, 0x50, 0x46, 0x3b, 0xa4, 0xe7,
	0x90, 0x55, 0x18, 0xaa, 0x6d, 0x66, 0x89, 0xeb, 0x47, 0xec, 0x12, 0xa6, 0x15, 0xe2, 0xa8, 0x3e,
	0xb2, 0x87, 0xc0, 0xd6, 0xd2, 0xac, 0xd2, 0x54, 0xbd, 0x97, 0x59, 0x88, 0xbf, 0xe5, 0x91, 0xb4,
	0xe8, 0x27, 0x7c, 0x0e, 0xc3, 0x9f, 0x30, 0x89, 0xef, 0xac, 0x3b, 0xe1, 0x1d, 0x49, 0xd4, 0x9b,
	0x81, 0xa8, 0x34, 0x3e, 0x07, 0x68, 0x4e, 0xe4, 0x6a, 0x6b, 0x5d, 0x01, 0xc9, 0xfc, 0x43, 0x0f,
	0x46, 0x55, 0x36, 0x67, 0xcf, 0xe4, 0x06, 0xc9, 0x3e, 0x11, 0x24, 0xbb, 0x2e, 0xa9, 0xf7, 0x19,
	0x6a, 0x6a, 0xed, 0x44, 0x94, 0x0a, 0xfb, 0x0a, 0xfc, 0xaa, 0x95, 0xbb, 0x53, 0x51, 0x1b, 0x3d,
	0x71, 0x84, 0xb3, 0x1b, 0x18, 0xc6, 0x5a, 0x6d, 0x73, 0x13, 0x0c, 0xe6, 0xfd, 0xeb, 0x69, 0xfb,
	0x76, 0xaa, 0xc4, 0x8b, 0xb5, 0xb3, 0x8b, 0x8a, 0xe6, 0x82, 0x4b, 0xe7, 0xbd, 0x8a, 0xa2, 0x8a,
	0x60, 0xa8, 0xf1, 0x63, 0x71, 0x84, 0xbb, 0xbd, 0xa9, 0xb1, 0x75, 0x99, 0x64, 0x48, 0xcc, 0x03,
	0x74, 0xf6, 0x03, 0x78, 0x24, 0x9d, 0xac, 0x71, 0x0e, 0x53, 0x19, 0x6d, 0x92, 0x4c, 0xb8, 0x9e,
	0x19, 0xaa, 0x74, 0x2c, 0xda, 0x10, 0xff, 0x98, 0x7b, 0x84, 0x26, 0xd4, 0x49, 0xbe, 0xdb, 0xc9,
	0x89, 0x68, 0x43, 0xfc, 0x0d, 0x40, 0x75, 0xe2, 0x55, 0x14, 0xb9, 0x69, 0xcf, 0xb7, 0x6f, 0xd3,
	0x24, 0xbc, 0xdd, 0xcd, 0x72, 0x03, 0xb0, 0xaf, 0x61, 0x24, 0x4b, 0x2e, 0x45, 0x9a, 0x2e, 0x1f,
	0x1c, 0xf5, 0x4b, 0xd4, 0x0c, 0xfe, 0xfb, 0xa9, 0xc9, 0x70, 0x2b, 0x5e, 0x11, 0x9a, 0x0c, 0x2d,
	0xc4, 0xad, 0x64, 0xdc, 0xf2, 0xa2, 0x3c, 0x9e, 0xd8, 0xc3, 0xf8, 0x0b, 0xf0, 0x04, 0xe6, 0x69,
	0xe1, 0x2a, 0xbe, 0x93, 0xe6, 0xae, 0x1e, 0x1a, 0x27, 0xb7, 0xc6, 0xad, 0xd7, 0x1e, 0x37, 0x37,
	0x2c, 0xb4, 0xb6, 0x34, 0x0b, 0x13, 0x51, 0x2a, 0xfc, 0x67, 0x18, 0xd7, 0xf3, 0x7e, 0x62, 0x83,
	0xaf, 0xc0, 0xbb, 0x77, 0x26, 0x0a, 0x75, 0x26, 0x4a, 0xa5, 0x95, 0xa1, 0xbf, 0x37, 0xd0, 0x8f,
	0xa0, 0xef, 0x2a, 0x38, 0x0a, 0xc3, 0xbf, 0x80, 0xf1, 0x4b, 0x15, 0xe1, 0x8b, 0xec, 0x9d, 0x62,
	0x01, 0x8c, 0xee, 0x51, 0x1b, 0x77, 0x19, 0xe5, 0x3d, 0xd5, 0xea, 0xf2, 0x43, 0x0f, 0x60, 0x95,
	0x27, 0xbf, 0xa0, 0xbe, 0x4f, 0x42, 0x64, 0x4f, 0x60, 0xf2, 0x4a, 0x19, 0x5b, 0xfe, 0x5c, 0xae,
	0x0e, 0xfe, 0x1a, 0xb4, 0x33, 0xb3, 0xcb, 0x06, 0xa5, 0x7e, 0xf0, 0x0e, 0x7b, 0xbc, 0xbf, 0xc3,
	0xec, 0xbc, 0xa1, 0xdc, 0x62, 0x31, 0x63, 0x7b, 0x2a, 0x51, 0x78, 0x87, 0x3d, 0x81, 0x8b, 0xea,
	0x5f, 0x5f, 0x6f, 0xdb, 0x81, 0xdb, 0xf1, 0x35, 0xf3, 0x0e, 0xfb, 0x16, 0x26, 0x6b, 0xb4, 0xf5,
	0x92, 0x2f, 0xca, 0x07, 0x65, 0x51, 0x3f, 0x28, 0x8b, 0xe7, 0xee, 0x41, 0x99, 0xf9, 0x8d, 0x67,
	0xc9, 0xe4, 0x1d, 0xf6, 0x3d, 0x4c, 0xd7, 0x68, 0x77, 0x1d, 0xf9, 0x3f, 0xd7, 0xd6, 0x59, 0x6b,
	0x2e, 0xef, 0x3c, 0x1d, 0xfd, 0xe1, 0x95, 0xbc, 0x21, 0x7d, 0x1e, 0xff, 0x17, 0x00, 0x00, 0xff,
	0xff, 0xeb, 0x1c, 0xf1, 0xcd, 0xdf, 0x06, 0x00, 0x00,
}
