stages:
  - test

variables:
  BOLD_RED: '\e[1;31m'
  NO_COLOR: '\e[0m'
  SECTION: '\e[0K'
  PRODUCTION_IMAGE: ${CI_REGISTRY_IMAGE}:${CI_COMMIT_REF_SLUG}
  VALIDATION_IMAGE: ${CI_REGISTRY_IMAGE}/validation:${CI_COMMIT_REF_SLUG}
  GO_CI_IMAGE: ${CI_REGISTRY_IMAGE}/ci-golang

build-image:golang:
  stage: test
  image: docker:20
  needs: []
  rules:
    - changes:
        - .gitlab/**/*
        - scripts/images/**/*
  services:
    - name: docker:20-dind
      command: [ --experimental ] # Do we need this?
  script:
    - docker build -t ${GO_CI_IMAGE} scripts/images/ci-golang
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker push ${GO_CI_IMAGE}

.go:
  stage: test
  image: ${GO_CI_IMAGE}
  cache:
    key: go-mod-cache
    paths:
      - .go-mod-cache
      - .golangci-cache
  variables:
    GOMODCACHE: ${CI_PROJECT_DIR}/.go-mod-cache
    GOLANGCI_LINT_CACHE: ${CI_PROJECT_DIR}/.golangci-cache

.rules all:
  rules:
  - if: $CI_PIPELINE_SOURCE != ''