.rules release:
  rules:
  - if: ($CI_COMMIT_BRANCH == 'release-1.0' || $CI_COMMIT_TAG != null) && $CI_PIPELINE_SOURCE != 'merge_request_event'

git describe:
  stage: pre deploy
  extends: .rules all
  needs: []
  script:
  - git fetch --unshallow
  - echo "GIT_DESCRIBE=$(git describe --dirty)" >> git.env
  artifacts:
    reports:
      dotenv: git.env

build main image:
  stage: pre deploy
  extends: .rules release
  needs: [ git describe ]
  image: docker:24
  timeout: 2 hours
  services:
    - name: docker:24-dind
  before_script:
    - apk add --update make
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - make docker-push IMAGE=$PRODUCTION_IMAGE GIT_DESCRIBE=$GIT_DESCRIBE GIT_COMMIT=$GIT_COMMIT

build binaries:
  stage: pre deploy
  extends: [ .rules release, .go ]
  needs: [ git describe ]
  # rules:
  # - if: ($CI_COMMIT_BRANCH != 'develop' && $CI_COMMIT_TAG == null) || $CI_PIPELINE_SOURCE == 'merge_request_event'
  #   when: manual
  script:
    - build-daemon linux amd64
    - build-daemon linux arm64
    - build-daemon windows amd64
    - build-daemon windows arm64
    - build-daemon darwin amd64
    - build-daemon darwin arm64
  artifacts:
    paths:
      - accumulated-*
