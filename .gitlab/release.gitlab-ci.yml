.rules release:
  rules:
  - if: (($CI_COMMIT_BRANCH == 'release-1.0' || $CI_COMMIT_TAG != null) && $CI_PIPELINE_SOURCE != 'merge_request_event') || $BUILD_BIN != null

git describe:
  stage: test
  extends: .rules all
  needs: []
  script:
  - git fetch --unshallow
  - echo "GIT_DESCRIBE=$(git describe --dirty)" >> git.env
  - echo "GIT_COMMIT=$(git rev-parse HEAD)" >> git.env
  artifacts:
    reports:
      dotenv: git.env

build main image:
  stage: test
  extends: .rules release
  needs: [git describe]
  image: docker:24
  timeout: 2 hours
  services:
    - name: docker:24-dind
  variables:
    COSIGN_YES: "true"
  id_tokens:
    SIGSTORE_ID_TOKEN:
      aud: sigstore
  before_script:
    - apk add --update cosign make
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - make docker-push IMAGE=$PRODUCTION_IMAGE
    - IMAGE_DIGEST=$(docker inspect --format='{{index .RepoDigests 0}}' $PRODUCTION_IMAGE)
    - cosign sign $IMAGE_DIGEST

build binaries:
  stage: test
  extends: [ .rules release, .go ]
  needs: [ git describe ]
  # rules:
  # - if: ($CI_COMMIT_BRANCH != 'develop' && $CI_COMMIT_TAG == null) || $CI_PIPELINE_SOURCE == 'merge_request_event'
  #   when: manual
  before_script:
  - |
    function build-daemon {
      export GOOS=$1
      export GOARCH=$2
      BIN=accumulated
      [ -z "$GOOS" ] || BIN=${BIN}-${GOOS}
      [ -z "$GOARCH" ] || BIN=${BIN}-${GOARCH}
      [[ $GOOS == windows ]] && BIN=${BIN}.exe
      export BUILDFLAGS="-o ${BIN}"
      echo -e "${SECTION}section_start:`date +%s`:build_${GOOS}_${GOARCH}\r${SECTION}Build accumulated for $GOOS $GOARCH"
      make GIT_COMMIT=${CI_COMMIT_SHA} GIT_DESCRIBE=${GIT_DESCRIBE}
      echo -e "${SECTION}section_end:`date +%s`:build_${GOOS}_${GOARCH}\r${SECTION}";
    }
  script:
    - build-daemon linux amd64
    - build-daemon linux arm64
    - build-daemon windows amd64
    - build-daemon windows arm64
    - build-daemon darwin amd64
    - build-daemon darwin arm64
  artifacts:
    paths:
      - accumulated-*
